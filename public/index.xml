<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Home on Unorthodox Developer</title>
        <link>https://unorthodoxdev.net/</link>
        <description>Recent content in Home on Unorthodox Developer</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 19 Jul 2023 13:24:19 -0400</lastBuildDate><atom:link href="https://unorthodoxdev.net/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Making a Comment Board Part 3</title>
        <link>https://unorthodoxdev.net/post/making-a-comment-board-part-3/</link>
        <pubDate>Wed, 26 Jul 2023 12:08:38 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/making-a-comment-board-part-3/</guid>
        <description>&lt;h2 id=&#34;actix-and-askama-webserver-and-rendering&#34;&gt;Actix and Askama Webserver and Rendering&lt;/h2&gt;
&lt;p&gt;Now we move onto the main.rs file, this is particularly simple as we will only be worried about two routes. a &lt;code&gt;get(&#39;/comment/&#39;)&lt;/code&gt; and a &lt;code&gt;post(&#39;/comment/new&#39;)&lt;/code&gt;. To start, I chose to use &lt;a class=&#34;link&#34; href=&#34;https://github.com/djc/askama&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Askama&lt;/a&gt; for templating since its closest to what im comforatble with (&lt;a class=&#34;link&#34; href=&#34;https://mustache.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mustache templating&lt;/a&gt;). Overall askama is pretty simple. We have to create a &lt;code&gt;Template&lt;/code&gt; that links to our template file. We will then add the content that we want to send to the template. Typically this is done with a struct.&lt;/p&gt;
&lt;p&gt;Since we are interfacing with the library, we will have to duplicate our code here and create a template of our array of templates instead of just passing a long our array of templates. We can do so by&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Template)]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// this will generate the code...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[template(path = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;index.html&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;)]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CommentTemplate&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    comments: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;cmanager::Comment&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next we will, create our &lt;code&gt;#[actix_web::main]&lt;/code&gt; function.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[actix_web::main]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;std&lt;/span&gt;::io::Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    HttpServer::new(&lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        App::new()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .service(web::resource(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;).to(&lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; { CommentTemplate {comments: &lt;span style=&#34;color:#a6e22e&#34;&gt;cmanager&lt;/span&gt;::get_all()}}))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .bind((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .run()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice that we build the route, we are creating a function with the &lt;code&gt;|| async {}&lt;/code&gt; and then calling on our &lt;code&gt;CommentTemplate&lt;/code&gt; that should have all the needed code generated with the macro. Before we run this thing though, were missing one more file. The &lt;code&gt;index.html&lt;/code&gt; refrenced by the template. To get that we will have to create a folder in our root directory called &lt;code&gt;templates&lt;/code&gt;. Then include a file called &lt;code&gt;index.html&lt;/code&gt;. I wont link my css here but you can view the active template file &lt;a class=&#34;link&#34; href=&#34;https://github.com/ofgrenudo/comment.unorthodoxdev.net/blob/7a6a3200a661613efe1bed94d573db4373f61ed2/templates/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HERE&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IE=edge&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Comments&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input-section&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;Submit Your Comment&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/comment/new&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;new_comment&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;whats your name anon?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;maxlength&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;500&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;required&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;textarea&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;maxlength&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;whats on your mind....&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;spellcheck&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;required&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;textarea&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&amp;gt;Send!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment-section&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;Comments&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comments&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            {% for comment in comments %}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                {% if comment.visible == 1 %}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hidden&lt;/span&gt;&amp;gt;{{comment.id}}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_ip&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hidden&lt;/span&gt;&amp;gt;{{comment.ip}}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_username&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;b&lt;/span&gt;&amp;gt;{{comment.username}}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;b&lt;/span&gt;&amp;gt; says...&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_input&amp;#34;&lt;/span&gt;&amp;gt;{{comment.comment}}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment_timestamp&amp;#34;&lt;/span&gt;&amp;gt;{{comment.timestamp}}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                {% endif %}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            {% endfor %}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Above, you can see the &lt;code&gt;{% for comment in comments %}&lt;/code&gt;. Thats all voodo stuff askama does. So no need for us to worry about it other than, know it is a loop that iterates over our vector. Also ive got a conditional statement, &lt;code&gt;{% if comments.visible == 1 %}&lt;/code&gt;. This only shows the comments that are visible and not hiddne. Im sure that eventually I need to completely remove that conditional and do it at the sql request side, but I kind of like the idea of being able to pull all comments, regardless of weather or not I want to show them or not.&lt;/p&gt;
&lt;p&gt;Finally, when you run your instance, You will probably see that there nothing populates. That is most likely because there are no comments yet. That brings us into the next step, lets work on the POST function. We will start by creating the new function on in our main.rs&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Deserialize)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Debug)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;FormData&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    username: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    comment: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;new&lt;/span&gt;(web::Form(form): &lt;span style=&#34;color:#a6e22e&#34;&gt;web&lt;/span&gt;::Form&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;FormData&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;, req: &lt;span style=&#34;color:#a6e22e&#34;&gt;HttpRequest&lt;/span&gt;) -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;impl&lt;/span&gt; Responder {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; ip &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; req.peer_addr().unwrap_or(SocketAddr::new(IpAddr::V4(Ipv4Addr::new(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;)), &lt;span style=&#34;color:#ae81ff&#34;&gt;666&lt;/span&gt;)).ip();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; form.username;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; comment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; form.comment;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; _ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cmanager::new(ip.to_string(), username, comment);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// CommentTemplate {comments: cmanager::get_all()}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    web::redirect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/comment/new&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Starting from top to bottom, we create a new function that intakes &lt;code&gt;FormData&lt;/code&gt; a new struct we have created that represents the content being sent to us from the HTML form. We also take in as an accept parameter the &lt;code&gt;req: HttpRequest&lt;/code&gt; this allows us to capture the IP address of the sender. After translating the FormData into some new variables, we input it into our &lt;code&gt;cmanager::new();&lt;/code&gt; to create a new comment entry. Wrapping it all up with a redirect to the root domain, scince I dont really want to deal with re rendering the in every function. Although in the future that may change. What if I want to give a dynamic error message about how you didnt read the rules? How would that work? Either way, to actually use the &lt;code&gt;new()&lt;/code&gt; function we need to add it as a route, in our &lt;code&gt;App::new()&lt;/code&gt;. The new main function looks like below,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[actix_web::main]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;std&lt;/span&gt;::io::Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    HttpServer::new(&lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        App::new()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .service(web::resource(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;).to(&lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; { CommentTemplate {comments: &lt;span style=&#34;color:#a6e22e&#34;&gt;cmanager&lt;/span&gt;::get_all()}}))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .route(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/comment/new&amp;#34;&lt;/span&gt;, web::post().to(new))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .bind((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .run()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now go ahead and build your comment board, and run it. It should be able to accept comments and display them when you go to the homepage.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Making a Comment Board Part 2</title>
        <link>https://unorthodoxdev.net/post/making-a-comment-board-part-2/</link>
        <pubDate>Mon, 24 Jul 2023 10:11:15 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/making-a-comment-board-part-2/</guid>
        <description>&lt;h2 id=&#34;finishing-up-cmanager&#34;&gt;Finishing Up CManager&lt;/h2&gt;
&lt;p&gt;Between the last post and the current post, ive made a few changes to the CManager. The first is the struct now contains a time stamp.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Debug)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Comment&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; id: &lt;span style=&#34;color:#a6e22e&#34;&gt;Uuid&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; ip: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; username: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; comment: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; timestamp: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; visible: &lt;span style=&#34;color:#66d9ef&#34;&gt;i64&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;besides that everything else stays the same. Currently there are two functions &lt;code&gt;new()&lt;/code&gt; and &lt;code&gt;get_all()&lt;/code&gt;. New intakes only two paramters, a String for the username and a string for the comment.&lt;/p&gt;
&lt;p&gt;One of the first things I do is take create a sha256 sum of the IP by doing the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; sha_ip &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; digest(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;ip.replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Fun fact, I found out that sha256 sums do not work well with special characters like a &lt;code&gt;:&lt;/code&gt;. So replacing it with noting helped make the string replacable. After converting our IP it was time to move onto some content filtering. Im sure that some of this code could be extrapulated into a private function, something like &lt;code&gt;check_content_length()&lt;/code&gt; but for now its here.&lt;/p&gt;
&lt;p&gt;We basically sift through a series of if statements to confirm that none of the values are over a maximum lenght. Looking at the code im sure that I could do a for loop here.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; username.len() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt; { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; problem_comment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Comment {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            id: &lt;span style=&#34;color:#a6e22e&#34;&gt;Uuid&lt;/span&gt;::new_v4(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ip: &lt;span style=&#34;color:#a6e22e&#34;&gt;sha_ip&lt;/span&gt;.to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            username: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;.to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            comment: &lt;span style=&#34;color:#a6e22e&#34;&gt;comment&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            timestamp: &lt;span style=&#34;color:#a6e22e&#34;&gt;Utc&lt;/span&gt;::now().to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            visible: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; username_too_long &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CommentError {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            error: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error, your user name was over 500 characters, this attempt has been logged, and will be reviewed later. Pleas try again :)&amp;#34;&lt;/span&gt;.to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            comment: &lt;span style=&#34;color:#a6e22e&#34;&gt;problem_comment&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Err(username_too_long);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; comment.len() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; problem_comment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Comment {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            id: &lt;span style=&#34;color:#a6e22e&#34;&gt;Uuid&lt;/span&gt;::new_v4(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ip: &lt;span style=&#34;color:#a6e22e&#34;&gt;sha_ip&lt;/span&gt;.to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            username: &lt;span style=&#34;color:#a6e22e&#34;&gt;username&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            comment: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;.to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            timestamp: &lt;span style=&#34;color:#a6e22e&#34;&gt;Utc&lt;/span&gt;::now().to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            visible: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; comment_too_long &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CommentError {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            error: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error, your comment was over 10,000 characters, this attempt has been logged, and will be reviewed later. Pleas try again :)&amp;#34;&lt;/span&gt;.to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            comment: &lt;span style=&#34;color:#a6e22e&#34;&gt;problem_comment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Err(comment_too_long);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, we commit our comment, into a new variable, and open our database up. We then generate a query and insert the comment into the database forming a record. To finish off the function, we return an &lt;code&gt;Ok&lt;/code&gt; and the incoming comment.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Everything looks good, lets move forward with commiting the information to the database.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; incoming_comment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Comment {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        id: &lt;span style=&#34;color:#a6e22e&#34;&gt;Uuid&lt;/span&gt;::new_v4(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ip: &lt;span style=&#34;color:#a6e22e&#34;&gt;sha_ip&lt;/span&gt;.to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        username: &lt;span style=&#34;color:#a6e22e&#34;&gt;username&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        comment: &lt;span style=&#34;color:#a6e22e&#34;&gt;comment&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        timestamp: &lt;span style=&#34;color:#a6e22e&#34;&gt;Utc&lt;/span&gt;::now().to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        visible: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; connection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlite::open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comments.db&amp;#34;&lt;/span&gt;).unwrap();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; query &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; format!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        CREATE TABLE IF NOT EXISTs comments (id TEXT NOT NULL PRIMARY KEY, ip TEXT, username TEXT NOT NULL, comment TEXT NOT NULL, timestamp TEXT, visible INT NOT NULL);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        INSERT INTO comments VALUES (&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;, incoming_comment.id, incoming_comment.ip, incoming_comment.username, incoming_comment.comment, incoming_comment.timestamp, incoming_comment.visible );
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    connection.execute(query).unwrap();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// All looks good, lets return it.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Ok(incoming_comment)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That was about the most complicated part of the CManager library. The next function we will cover is the &lt;code&gt;get_all()&lt;/code&gt; function. Every now and then I get the urge to just overload a function in rust. Then I remember thats no bueno. So I think traits. But traits confuse me. So I keep my brain smooth by making functions like &lt;code&gt;get_all()&lt;/code&gt; which I think is unanimously acceptable.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;get_all()&lt;/code&gt; function is pretty simple. We return a vector of &lt;code&gt;Comment&lt;/code&gt;, we affecitionally will reffer to this as &lt;code&gt;comments&lt;/code&gt;. We return our comments by running a query &lt;code&gt;SELECT * FROM comments ORDER BY timestamp DESC LIMIT 50;&lt;/code&gt;. We then iterate through our Statements and create a comment  for each row. Then before iterating to the next row in our statement, we will commit our comment, by adding it to the vector comments.&lt;/p&gt;
&lt;p&gt;Finally, we will return our vector and allow the client to whatever they would like with it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_all&lt;/span&gt;() -&amp;gt; Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Comment&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; comments: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Comment&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vec![];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; connection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlite::open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comments.db&amp;#34;&lt;/span&gt;).unwrap();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Note we had to split up the blow two statements. For some reason, the statement.next() function later down the program would not pull comments when we ran the CREATE TABLE command.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Maybe its because I didnt do the format!() like i did in the new comment function???
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// The compiler is angry here, i know. Ill fix it all later, but for now it looks aesthetically pleasing uwu.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; query &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SELECT * FROM comments ORDER BY timestamp DESC LIMIT 50;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; statement &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; connection.prepare(query).unwrap();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; Ok(State::Row) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; statement.next() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; temp_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; statement.read::&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, _&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;).unwrap();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; id: &lt;span style=&#34;color:#a6e22e&#34;&gt;Uuid&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Uuid::parse_str(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;temp_id).unwrap();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        comments.push(Comment {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            id: &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ip: &lt;span style=&#34;color:#a6e22e&#34;&gt;statement&lt;/span&gt;.read::&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, _&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ip&amp;#34;&lt;/span&gt;).unwrap().to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            username: &lt;span style=&#34;color:#a6e22e&#34;&gt;statement&lt;/span&gt;.read::&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, _&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;).unwrap().to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            comment: &lt;span style=&#34;color:#a6e22e&#34;&gt;statement&lt;/span&gt;.read::&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, _&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment&amp;#34;&lt;/span&gt;).unwrap().to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            timestamp: &lt;span style=&#34;color:#a6e22e&#34;&gt;statement&lt;/span&gt;.read::&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, _&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;timestamp&amp;#34;&lt;/span&gt;).unwrap(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            visible: &lt;span style=&#34;color:#a6e22e&#34;&gt;statement&lt;/span&gt;.read::&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;i64&lt;/span&gt;, _&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;visible&amp;#34;&lt;/span&gt;).unwrap(),            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    comments
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;While I dont think we have gone over a lot, i think that we are a bit too far as is to continue going on with the main.rs implementation. So I would like to put a pause here and continue forward in the next part.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Making a Comment Board Part 1</title>
        <link>https://unorthodoxdev.net/post/making-a-comment-board-part-1/</link>
        <pubDate>Fri, 21 Jul 2023 12:48:09 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/making-a-comment-board-part-1/</guid>
        <description>&lt;h2 id=&#34;commentunorthodoxdevnet&#34;&gt;comment.unorthodoxdev.net&lt;/h2&gt;
&lt;p&gt;Currently, my blog is made using hugo. The theme that I am using has the capability to enable comments, although they would all be hosted on a third party. Unfortunately for me, im unwilling to signup for said third parties. One saturday morning as I was drinking my coffee and browsing the blogs that I follow, landed on a favorite of mine: &lt;a class=&#34;link&#34; href=&#34;https://blog.ari-web.xyz/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.ari-web.xyz/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I really love ari&amp;rsquo;s blog. I think that Ari does what the web was supposed to do and really embodies the the nature of blogging. Something that I aspire to do. But am too introverted to even post things about my self online, personally I get too wrapped up in making sure everything is perfect, that when I do get the urge to post something I post it and avoid my computer for the rest of the day in fear of finding a misspelled word (which happens more often than not).&lt;/p&gt;
&lt;p&gt;One of the features of Ari&amp;rsquo;s blog that I really like is the &lt;a class=&#34;link&#34; href=&#34;https://user.ari-web.xyz/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://user.ari-web.xyz/&lt;/a&gt; section. Its a comment board that anyone can post to anon or not. While i havent looked at what Ari&amp;rsquo;s comment section was written in, im planning on writing this comment section in rust. My goal for now is to seperate the project into two secions&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Binary&lt;/strong&gt;: comment.unorthodoxdev.net&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Library&lt;/strong&gt;: cmanager (Comments Manager)&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Binary&lt;/strong&gt; will contain the code related to the web hooks and buisness logic.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Library&lt;/strong&gt; will contain the code that will store said comments into a JSON file or whatever database I decide to use (a JSON file).&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;Of course, we always must start with the library. The first step to making this comment board is figuring out what kind of data structure we will use. For now I will avoid thinking about databases, and focus on just figuring out what our data is going to look like.&lt;/p&gt;
&lt;p&gt;I start by imaginging that we have a html web page, that users connect to. There we will have a &lt;strong&gt;form&lt;/strong&gt; that allows users to input into the form, the following information&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User Name&lt;/li&gt;
&lt;li&gt;Their Comment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From there, they will click submit and then it will create a &lt;strong&gt;post&lt;/strong&gt; or a &lt;strong&gt;put&lt;/strong&gt; to some backend service that will gather the following information&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id&lt;/li&gt;
&lt;li&gt;ip&lt;/li&gt;
&lt;li&gt;username&lt;/li&gt;
&lt;li&gt;comment&lt;/li&gt;
&lt;li&gt;visible&lt;/li&gt;
&lt;li&gt;time ( i just thought of this and will need to add it in the future)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From there it will do some kind of content filtering, checking that the string length is appropriate, checking that there arent any vulgar words, here we could have a filter list, Censored Words, and Banned Words. Banned Words will have the comment shown as hidden and be logged and stored, along with the banned word being censored. Censored words will just replace the word that is not allowed or approriate, and replace it with @@@@@. for example, &amp;ldquo;God i @@@@@@@ you joshua. I hope you die &amp;mdash; Anon&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Im sure I wont be able to catch all the possible ban able words and or censored words, but it will be a fun experiment to work on with word processing.&lt;/p&gt;
&lt;p&gt;Where I have left off, you can currently create a new comment using &lt;code&gt;cmanager::new(ip, username, comment);&lt;/code&gt; the next step here is saving it. I initially wanted to do just a json file, but decided to go against that to get me comfortable with using SQL. So far, im hoping to use a sqlite database, since it can one file, uploaded with the repository, and! it doesnt make a lot of overhang on my project.&lt;/p&gt;
&lt;p&gt;So far I have also done some content filtering in the data that &lt;code&gt;cmanager::new&lt;/code&gt; recieves. Currently limits are set at 500 characters for all values with the exclusion of the comment in which, I have allowed a small hate filled paragraph to be typed out and submitted on the comment board (10,000 characters). Anything more than that is one of two things, not worth reading, or an spam/advertisement.&lt;/p&gt;
&lt;p&gt;The reason I bring this feature up is because there are no try fail, loops in rust. If someone where to buffer overload my program, it would just simply quit to a unrecoverable fail state where I would have to then manually log in and start the program. But whos to say someone isnt constantly submitting comments to my comment board, breaking my system. To prevent that kind of behaviour you can strongly type into the program the abbility to encounter those errors, and tell the compiler what to do.&lt;/p&gt;
&lt;p&gt;For example, within the &lt;code&gt;cmanager::new()&lt;/code&gt; function, I have written an &lt;code&gt;if&lt;/code&gt; statement that checks the length of those values. It then returns a Enum containing a struct, that contains two parts. Information about the reason the program errored out. And a sample of the data that caused the error. This allows for me to log, what caused that error, and continue moving on as if it was intended behaviour.&lt;/p&gt;
&lt;p&gt;Simply put, that error, that previously crashed the program &lt;strong&gt;&lt;strong&gt;is now intended behaviour&lt;/strong&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lib.rs&#34; data-lang=&#34;lib.rs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Debug)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Comment&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    id: &lt;span style=&#34;color:#a6e22e&#34;&gt;Uuid&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ip: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    username: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    comment: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    visible: &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Debug)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CommentError&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    error: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    comment: &lt;span style=&#34;color:#a6e22e&#34;&gt;Comment&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;enum&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CommentResult&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Comment, CommentError&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ok(Comment),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Err(CommentError),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ip.len() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; problem_comment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Comment {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            id: &lt;span style=&#34;color:#a6e22e&#34;&gt;Uuid&lt;/span&gt;::new_v4(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ip: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;.to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            username: &lt;span style=&#34;color:#a6e22e&#34;&gt;username&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            comment: &lt;span style=&#34;color:#a6e22e&#34;&gt;comment&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            visible: &lt;span style=&#34;color:#a6e22e&#34;&gt;false&lt;/span&gt;,        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; ip_too_long &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CommentError {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            error: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error, your ip address was over 500 characters, this attempt has been logged, and will be reviewed later. Pleas try again :)&amp;#34;&lt;/span&gt;.to_string(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            comment: &lt;span style=&#34;color:#a6e22e&#34;&gt;problem_comment&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Err(ip_too_long);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>New Bloging System</title>
        <link>https://unorthodoxdev.net/post/new-blogging-system/</link>
        <pubDate>Fri, 21 Jul 2023 10:58:35 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/new-blogging-system/</guid>
        <description>&lt;img src="https://unorthodoxdev.net/post/new-blogging-system/this-is-fine.png" alt="Featured image of post New Bloging System" /&gt;&lt;p&gt;Ive migrated my website from the ghost blogging platform to &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo&lt;/a&gt; (go hugo, go hugo, go!). Its a little simpler and easier to manage. I also feel as though I have more controll. Currently, im using the hugo-stacked-theme as it looks the most appealing to me, and is not a massive website with insane overhead. It also comes with a indexing feature that allows me (and you ofcourse) to search my content for specific keywords.&lt;/p&gt;
&lt;p&gt;Another great thing about it being simple is I dont have to constantly monitor that the ghost instance isnt taking too much resources as the web server just lives on a static nginx route. The only thing I &lt;strong&gt;will&lt;/strong&gt; have to get used to is making sure that before I push to the remote repository, that I have ran &lt;code&gt;hugo&lt;/code&gt; so that it can build each of my pages.&lt;/p&gt;
&lt;p&gt;Currently I am manually logging into the web server and pulling the repostory whenever I feel like it. In the future, ideally id set a cron job for every 30 minutes or something like that.&lt;/p&gt;
&lt;p&gt;ehhh either way this new cms seems to be working. Keep in touch as im hoping to release a new feature to my website soon :)&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Read the Damn Instructions</title>
        <link>https://unorthodoxdev.net/post/read-the-damn-instructions/</link>
        <pubDate>Fri, 21 Jul 2023 10:50:07 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/read-the-damn-instructions/</guid>
        <description>&lt;p&gt;Read the damn instructions. Im working on a new project for the website, and Im trying to upload what I have to github (a simple readme nothing more).&lt;/p&gt;
&lt;p&gt;I create an empty repository, init, add, and commit locally. Set the remote repository, and try to push to the remote&amp;hellip; And it fails? What have I done? What did I do? I have done this probably thousands of times. Where did I mess up? Will I have to recreate the folder? Should I re init the local repo?&lt;/p&gt;
&lt;p&gt;What do i do?&lt;/p&gt;
&lt;p&gt;immediately I search the error &lt;code&gt;error, failed to push some refs to the remote github repository.&lt;/code&gt;. I find some stack overflow repository, and I begin reading. I trust stack over flow, they got some smart guys on there. Alot smarter guys on there than me because theres always awnsers to my questions.&lt;/p&gt;
&lt;p&gt;It doesnt work. It doesnt work, what did I do. I followed the advice of this internet stranger. They posted the awnser recently (2021) what have I done. This is a catosrophic faliure on my end. Ill never be able to recover from this.&lt;/p&gt;
&lt;p&gt;I switch tabs back to my github repository after reading the advice one strange lonlely internet post, and I read the instructions given to me by github.&lt;/p&gt;
&lt;p&gt;Oh&amp;hellip;&lt;/p&gt;
&lt;p&gt;Ive forgotten to set the primary branch. Maybe ive had too much coffee.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Ghost Printers</title>
        <link>https://unorthodoxdev.net/post/ghost-printers/</link>
        <pubDate>Thu, 20 Jul 2023 16:03:40 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/ghost-printers/</guid>
        <description>&lt;p&gt;Ive recently had an encounter with a printer that creates 100s of copies of its self within the computers printer settings. Ive spent quite a bit of time tinkering with this printer and its settings. I think I’ve come to a resolution. Overall, to recap what I did; Opening up the Regedit there were 100’s of keys associated with the Xerox printer. Typically, these registry keys are created when installing the printer and the windows printui.dll handles it. But the amount of registry keys meant that windows kept recreating these keys. I dug a little bit more into the registry keys and it appears that each of these keys had the following properties assigned to them. Name “PRT-AWH-321-COLOR”, Driver “Xerox …” that was pretty much it. The rest of the fields were empty.&lt;/p&gt;
&lt;p&gt;I started off looking into removing these printers via a script etc. Doing so I found the existence of a registry key we can create that would have windows remove the printers on exit. To enable this feature you would have to create a 32bit dWord key in the following location &lt;code&gt;&amp;quot;HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Print\Providers\Client Side Rendering Print Provider&amp;quot;&lt;/code&gt; with the name &lt;code&gt;&amp;quot;RemovePrintersAtLogoff&amp;quot;&lt;/code&gt; and the value of 1.&lt;/p&gt;
&lt;p&gt;After creating this key, when a user logs out it should clear out any installed printers, and apply the group policy user settings next time a user logs in. Well creating that key and then logging out seemed to work. But those xerox registry keys persisted for some reason. I grabbed one of the GUIDS from a ghost printer and ran a search for all the instances I could find it in regedit. I ran across quite a few instances and ended up writing a script.&lt;/p&gt;
&lt;p&gt;We start by stopping the printer spooler, and then removing the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;onnections
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rinters
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;roviders
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\V&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; Connections
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;ow6432Node&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;onnections
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;ow6432Node&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rinters
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;ow6432Node&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;roviders
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;ow6432Node&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\V&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; Connections
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKCU:&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rinters
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKCU:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;oftware&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rinterPorts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKEY_USERS&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;DEFAULT&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rinters
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following below you need a system user context to remove. You can do so by using PSExec from Windows PowerToys.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentControlSet&lt;span style=&#34;color:#ae81ff&#34;&gt;\E&lt;/span&gt;num&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;WD&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;RINTENUM 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentControlSet&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrol&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;eviceClasses&lt;span style=&#34;color:#ae81ff&#34;&gt;\{&lt;/span&gt;0ecef634-6ef0-472a-8085-5ad023ecbccd&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrolSet001&lt;span style=&#34;color:#ae81ff&#34;&gt;\E&lt;/span&gt;num&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;WD&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;RINTENUM    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrolSet001&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrol&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;eviceClasses&lt;span style=&#34;color:#ae81ff&#34;&gt;\{&lt;/span&gt;0ecef634-6ef0-472a-8085-5ad023ecbccd&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrolSet002&lt;span style=&#34;color:#ae81ff&#34;&gt;\E&lt;/span&gt;num&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;WD&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;RINTENUM    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrolSet002&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrol&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;eviceClasses&lt;span style=&#34;color:#ae81ff&#34;&gt;\{&lt;/span&gt;0ecef634-6ef0-472a-8085-5ad023ecbccd&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentControlSet&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrol&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;lass&lt;span style=&#34;color:#ae81ff&#34;&gt;\{&lt;/span&gt;1ed2bbf9-11f0-4084-b21f-ad83a8e6dcdc&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After doing so, when you open up the control panel all the printers should be grayed out. Because these printers are being added via group policy, doing a reboot, should resolve any issues we had previously. Once the computer comes back up again, all of those printers should remain grey, and anything that gets installed via group policy should then fill in with color. But shortly after, it started happening again. I kept getting notifications of the printer installing, over and over and over again.&lt;/p&gt;
&lt;p&gt;With that, its confirms that it is not some residual left over install, but narrows it down to one or two things. A messed up group policy or a bad driver. Looking at the group policy I could find anything wrong, so I decided to start at the driver. I took the computer off the domain, and downloaded the PCL, General, and PS, driver for the printer.&lt;/p&gt;
&lt;p&gt;Once the computers off the domain, I remove all printers. And repeat the above steps. After doing so I started with the identical driver installed, the General driver. I setup the printer and as soon as the install finishes. I immediately get the same issue again.&lt;/p&gt;
&lt;p&gt;Its no longer a group policy issue, its now a driver issue. Uninstall all the printers again and start from step one. Once I get to installing the printer I use the PCL driver. I had similar issues. Finally the Post Script (PS) driver ended up working for me and resolved in no issues.&lt;/p&gt;
&lt;p&gt;Either way, cleaning up the ghost printers is a pain in my ass, and is nothing but manual labor. I ended up reimaging the comptuers after fixing the driver on the print server and going from there.&lt;/p&gt;
&lt;p&gt;Since then its seemed to have been fixed.&lt;/p&gt;
&lt;h2 id=&#34;scripts&#34;&gt;Scripts&lt;/h2&gt;
&lt;p&gt;part-one.ps1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Powershell&#34; data-lang=&#34;Powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;New-ItemProperty -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Print\Providers\Client Side Rendering Print Provider&amp;#34;&lt;/span&gt; -Name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RemovePrintersAtLogoff&amp;#34;&lt;/span&gt; -Value &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; -Force
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Restart-Computer -Force
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;part-two.ps1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Powershell&#34; data-lang=&#34;Powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stop-Service spooler -Force
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\Connections&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\Printers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\Providers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\V4 Connections&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Print\Connections&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Print\Printers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Print\Providers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Print\V4 Connections&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKCU:\Printers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKCU:\Software\Microsoft\Windows NT\CurrentVersion\PrinterPorts&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Registry::HKEY_USERS\.DEFAULT\Printers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe /accepteula
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\CurrentControlSet\Enum\SWD\PRINTENUM&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\CurrentControlSet\Control\DeviceClasses\{0ecef634-6ef0-472a-8085-5ad023ecbccd}&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\ControlSet001\Enum\SWD\PRINTENUM&amp;#34;&lt;/span&gt; -Recurse -ErrorAction SilentlyContinue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\ControlSet001\Control\DeviceClasses\{0ecef634-6ef0-472a-8085-5ad023ecbccd}&amp;#34;&lt;/span&gt; -Recurse -ErrorAction SilentlyContinue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\ControlSet002\Enum\SWD\PRINTENUM&amp;#34;&lt;/span&gt; -Recurse -ErrorAction SilentlyContinue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\ControlSet002\Control\DeviceClasses\{0ecef634-6ef0-472a-8085-5ad023ecbccd}&amp;#34;&lt;/span&gt; -Recurse -ErrorAction SilentlyContinue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\CurrentControlSet\Control\Class\{1ed2bbf9-11f0-4084-b21f-ad83a8e6dcdc}&amp;#34;&lt;/span&gt; -Recurse 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Restart-Computer -Force
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>MECM API</title>
        <link>https://unorthodoxdev.net/post/mecm-api/</link>
        <pubDate>Wed, 19 Jul 2023 21:02:50 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/mecm-api/</guid>
        <description>&lt;p&gt;Currently im looking into creating an application to harvest device information using the MECM API. Since I constantly have to research where the MECM Admin service has its hooks, i thought it would be a good idea to add some general information here.&lt;/p&gt;
&lt;h2 id=&#34;the-basics&#34;&gt;The Basics&lt;/h2&gt;
&lt;p&gt;The AdminService is a REST API that runs as a service, independent of the other web components in IIS on your site servers.&lt;/p&gt;
&lt;h3 id=&#34;service&#34;&gt;Service&lt;/h3&gt;
&lt;p&gt;You can check the status of the service in the console under &lt;strong&gt;\Monitoring\Overview\System Status\Component Status - SMS_REST_PROVIDER&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;read-only-query-basics&#34;&gt;Read-Only Query Basics&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;Note: All queries in this section use a HTTP GET method. Also, everything is CASE SenSiTiVe.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Get all Devices &lt;code&gt;https://&amp;lt;ServerName&amp;gt;/AdminService/wmi/SMS_R_System&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Get All Users &lt;code&gt;https://&amp;lt;ServerName&amp;gt;/AdminService/wmi/SMS_R_User&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Get Device By ResourceID (same syntax for users) &lt;code&gt;https://&amp;lt;ServerName&amp;gt;/AdminService/wmi/SMS_R_System(12345678)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Get User By ResourceID &lt;code&gt;https://&amp;lt;ServerName&amp;gt;/AdminService/wmi/SMS_R_User(12345678)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Retrieve related class information. This example gets Operating System information for a specific device. &lt;code&gt;https://&amp;lt;ServerName&amp;gt;/AdminService/wmi/SMS_R_System(12345678)/SMS_G_System_OPERATING_SYSTEM&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Tattoo</title>
        <link>https://unorthodoxdev.net/post/tattoo/</link>
        <pubDate>Wed, 19 Jul 2023 21:01:44 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/tattoo/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://github.com/ofgrenudo/tattoo/actions/workflows/ci.yml/badge.svg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Workflow Status&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Repository: &lt;a class=&#34;link&#34; href=&#34;https://github.com/ofgrenudo/tattoo/tree/master&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ofgrenudo/tattoo/tree/master&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tattoo is the first complete program that I have written in rust. It consists of two parts, a library and the binary. One of the challenges I experienced when writing this application was the lack of abbility to include files outside of module&amp;rsquo;s folder that I was writing in. While I understand &lt;em&gt;now&lt;/em&gt; why you should not do so and the kinds of compiler problems you would encounter. I think that forcing me to write a library to manage my goals was very benificial for me.&lt;/p&gt;
&lt;p&gt;This is the first library that I have had to write that actually does something. Something more than one plus one, or something simple you make when you learn C. This library was immediately applicable to my needs. It also helped me keep my programs logically seperate from eachother. The UI was allowed to get input from the UI and handle that. The backend was able to take the information from the UI and transcribe it into the database. This way of seperating the program made a dream like fusion for me when it came to keeping things clean.&lt;/p&gt;
&lt;p&gt;Writing the library also forced me to leverage the rust documentation feature. Really cementing the whole experience together.&lt;/p&gt;
&lt;p&gt;Overall, I really enjoyed the experience making this application and hope to have many more safe adventures with rust :)&lt;/p&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;Tattoo is a program designed to automatically collect device information on run, and insert it into the registry of the device. This information is intended for archival purposes and will remain there for later inspection. Some of the bennifits of storing information in the registry is that it provides a static and proctected way to maintain information like,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The day the computer was deployed.&lt;/li&gt;
&lt;li&gt;The task sequence used when you deployed the computer.&lt;/li&gt;
&lt;li&gt;The asset tag assigned.&lt;/li&gt;
&lt;li&gt;The device name when deployed.&lt;/li&gt;
&lt;li&gt;The serial number of the device.&lt;/li&gt;
&lt;li&gt;The device model.&lt;/li&gt;
&lt;li&gt;The device make.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows &amp;gt;=10, or Windows Server 2016.&lt;/li&gt;
&lt;li&gt;PowerShell 5.1 or later&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running&#34;&gt;Running&lt;/h2&gt;
&lt;p&gt;In order to run tattoo.exe you will need at a minimum, the following file along side the executable.&lt;/p&gt;
&lt;p&gt;tatto.exe.manifest&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; standalone=&amp;#34;yes&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urn:schemas-microsoft-com:asm.v1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;manifestVersion=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;assemblyIdentity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0.0.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;processorArchitecture=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;win32&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependentAssembly&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;assemblyIdentity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;win32&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Microsoft.Windows.Common-Controls&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6.0.0.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;processorArchitecture=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;publicKeyToken=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6595b64144ccf1df&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;language=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependentAssembly&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/assembly&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Otherwise it will throw an error &lt;code&gt;exit code: 0xc0000139, STATUS_ENTRYPOINT_NOT_FOUND&lt;/code&gt; when trying to run the program. This is a bug with the native windows gui API that has not been resolved.&lt;/p&gt;
&lt;h2 id=&#34;example-screenshots&#34;&gt;Example Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ofgrenudo/tattoo/master/docs/tattoo-ui.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;tattoo-ui&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Ci Pipelines With Rust</title>
        <link>https://unorthodoxdev.net/post/ci-pipelines-with-rust/</link>
        <pubDate>Wed, 19 Jul 2023 21:01:12 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/ci-pipelines-with-rust/</guid>
        <description>&lt;p&gt;&lt;em&gt;Give a man a fish, and you feed him for a day. Teach a man to fish, and you feed him for a lifetime.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;CI, Continuous onus Integration allows for each member of a team to integrate their changes into the main branch, multiple times a day.&lt;/p&gt;
&lt;p&gt;Continuous Integration allows us to tighten the feed back loop. We are less likely to go off on your own and develop for days or weeks just to find out the approach you have taken isn&amp;rsquo;t working, or isn&amp;rsquo;t approved by peers. Continuous Integration forces you to work with your teammates earlier than when you feel is comfortable allowing for course correcting actions to be taken &lt;em&gt;before&lt;/em&gt; you have wasted your time. So how do we make Continuous Integration a reality?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Tests&lt;/li&gt;
&lt;li&gt;Code Coverage&lt;/li&gt;
&lt;li&gt;Linting&lt;/li&gt;
&lt;li&gt;Formatting&lt;/li&gt;
&lt;li&gt;Security Vulnerabilities&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;tests&#34;&gt;Tests&lt;/h2&gt;
&lt;p&gt;Tests in rust are a first-class concept. This being said rust allows you to easily leverage the rust ecosystem to run unit and integration tests using&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;cargo test&lt;/code&gt; also takes care of building the project before running tests saving you a command or two.&lt;/p&gt;
&lt;h2 id=&#34;code-coverage&#34;&gt;Code Coverage&lt;/h2&gt;
&lt;p&gt;Code coverage is a easy way to see if we have overlooked any section of the code base that have been poorly tested. The easiest way to measure code coverage of a rust project is via &lt;code&gt;cargo tarpaulin&lt;/code&gt; a cargo subcommand developed by xd009642. You can install tarpaulin with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo install cargo-tarpaulin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can run cargo-tarpaulin with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo tarpaulin --ignore-tests
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linting&#34;&gt;Linting&lt;/h2&gt;
&lt;p&gt;Rust maintains &lt;code&gt;clippy&lt;/code&gt; the official rust linter. Clippy is included in the set of components installed by rustup if you are using the default profile. You can run clippy with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo clippy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this CI pipeline we would like to fail the linter check if clippy emits any warnings. To do so we can run the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo clippy -- -D warnings
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note, from time to time clippy might suggest something you do not belive to be correct or desirable. You can mute these warnings with the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[allow(clippy::lint_name)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;formatting&#34;&gt;Formatting&lt;/h2&gt;
&lt;p&gt;Let machines deal with formatting while reviewers focus on architecture, testing thoroughness, reliability, and observability. Automated formatting removes a distraction from the complex equation of the PR review process. You might dislike this or that formatting choice but the complete erasure of formatting bikeshedding is worth the minor discomfort.&lt;/p&gt;
&lt;p&gt;Rust actually has a built in formatter called &lt;code&gt;rustfmt&lt;/code&gt;. &lt;code&gt;rustfmt&lt;/code&gt; should be included in the default rustup components but if you are missing it you can install it via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rustup component add rustfmt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To format your whole project you can run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo fmt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the CI pipeline we will ad a formatting step.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo fmt -- --check
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will ultimately fail when a commit contains unformatted code, printing the difference to the console. You can tune a project with a configuration file &lt;code&gt;rustfmt.toml&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;security-vulnerabilities&#34;&gt;Security Vulnerabilities&lt;/h2&gt;
&lt;p&gt;Caro makes it very easy to leverage existing crates in the ecosystem to solve at hand. On the flip side, each of those crates might hide an exploitable vulnerability that could compromise the security posture of your software. The Rust Secure Code group maintains an &lt;em&gt;Advisory Database&lt;/em&gt; on reported vulnerabilities for crates published on crates.io. You can leverage this advisory database with a tool called cargo-audit. You can install it with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo install cargo-audit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To use it you can run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo audit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;github-actions&#34;&gt;Github Actions&lt;/h1&gt;
&lt;p&gt;Below are some github actions you can add to your CI routines. To use them you will want too create the github actions folder and drop each of these files inside.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p .github/workflows
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd .github/workflows
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;audit.yml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Security audit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;schedule&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;cron&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0 0 * * *&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;paths&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;**/Cargo.toml&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;**/Cargo.lock&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;security_audit&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;taiki-e/install-action@cargo-deny&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Scan for vulnerabilities&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cargo deny check advisories&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;general.yml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Rust&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pull_request&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;types&lt;/span&gt;: [ &lt;span style=&#34;color:#ae81ff&#34;&gt;opened, synchronize, reopened ]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;CARGO_TERM_COLOR&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;SQLX_VERSION&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.6.2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;SQLX_FEATURES&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rustls&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;test&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dtolnay/rust-toolchain@stable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Swatinem/rust-cache@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Run tests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cargo test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;fmt&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Rustfmt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dtolnay/rust-toolchain@stable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;components&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;rustfmt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Enforce formatting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cargo fmt --check&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;clippy&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Clippy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;postgres&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres:14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;POSTGRES_USER&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;POSTGRES_PASSWORD&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;POSTGRES_DB&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#ae81ff&#34;&gt;5432&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;5432&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dtolnay/rust-toolchain@stable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;components&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;clippy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Swatinem/rust-cache@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Linting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cargo clippy -- -D warnings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;coverage&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Code coverage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Checkout repository&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dtolnay/rust-toolchain@stable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Generate code coverage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cargo tarpaulin --verbose --workspace&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Ublock Origin and More</title>
        <link>https://unorthodoxdev.net/post/ublock-origin-and-more/</link>
        <pubDate>Wed, 19 Jul 2023 21:00:06 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/ublock-origin-and-more/</guid>
        <description>&lt;p&gt;Everybody knows about &lt;a class=&#34;link&#34; href=&#34;https://ublockorigin.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;uBlock Origin&lt;/a&gt;. The browser extension that blocks ads right? Well most ads. Theres often ads from social medias sites like facebook and twitter that slip through really.&lt;/p&gt;
&lt;p&gt;Although I recently learned that uBlock has the capability to extend those block lists. The easiset way to add capabilities to your uBlock is to find these pre made lists of URLs and it should begin to block those ads for you. These are really the same lists that DNS filters like pi-hole use.&lt;/p&gt;
&lt;p&gt;A good website that has some of these lists are &lt;a class=&#34;link&#34; href=&#34;https://easylist.to&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://easylist.to&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Browse to the website, and find what ever list you want and then select the button &lt;strong&gt;add it to your blocker.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This will open a new tab, and then uBlock will prompt you to subscribe it it. Select &amp;lsquo;Subscribe&amp;rsquo; and then you will be live with that list.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Digital Gardens</title>
        <link>https://unorthodoxdev.net/post/digital-gardens/</link>
        <pubDate>Wed, 19 Jul 2023 20:59:39 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/digital-gardens/</guid>
        <description>&lt;h2 id=&#34;outline&#34;&gt;Outline&lt;/h2&gt;
&lt;h3 id=&#34;what-is-a-digital-garden&#34;&gt;What is a Digital Garden?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A place for ideas to grow.&lt;/li&gt;
&lt;li&gt;A place for critiques.&lt;/li&gt;
&lt;li&gt;An exercise in learning in public.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;learn-in-public&#34;&gt;Learn In Public&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Humility.&lt;/li&gt;
&lt;li&gt;Honesty.&lt;/li&gt;
&lt;li&gt;Generate Resources that you wish you had.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;work-in-public&#34;&gt;Work In Public&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Document Your Self.&lt;/li&gt;
&lt;li&gt;Document Your Steps&lt;/li&gt;
&lt;li&gt;Working In Public Forces you to Work your Metacognitive Mind.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What is a digital garden? &lt;a class=&#34;link&#34; href=&#34;https://notes.joschua.io/50&amp;#43;Slipbox/Digital&amp;#43;garden&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://notes.joschua.io/50+Slipbox/Digital+garden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Work In Public &lt;a class=&#34;link&#34; href=&#34;https://nesslabs.com/work-in-public&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://nesslabs.com/work-in-public&lt;/a&gt;
Learn In Public &lt;a class=&#34;link&#34; href=&#34;https://www.swyx.io/learn-in-public&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.swyx.io/learn-in-public&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pick Up What They Put Down &lt;a class=&#34;link&#34; href=&#34;https://www.swyx.io/puwtpd&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.swyx.io/puwtpd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Learn In Private &lt;a class=&#34;link&#34; href=&#34;https://www.swyx.io/learn-in-private&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.swyx.io/learn-in-private&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How do Rocket Scientists Learn &lt;a class=&#34;link&#34; href=&#34;https://www.govloop.com/community/blog/how-do-rocket-scientists-learn-aka-knowledge-management-lessons-learned-at-goddard-nasa/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.govloop.com/community/blog/how-do-rocket-scientists-learn-aka-knowledge-management-lessons-learned-at-goddard-nasa/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;what-is-a-digital-garden-1&#34;&gt;What is a Digital Garden?&lt;/h1&gt;
&lt;p&gt;A digital garden to me is a place for for my ideas, projects, and thoughts to be planted in, and sprout and grow in the future. Besides a personal journal on my computer Ive decided to make it a publicly facing blog. Ive decided to so for a few reasons. A digital garden allows space for critiques from others. I don&amp;rsquo;t know everything, nor do I know the best way to do one thing. Posting things publicly allows for a criticism from netizens.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;As I grow, my notes will grow. They will mature from that seed to a full grown plant later in the future.&amp;rdquo; &lt;a class=&#34;link&#34; href=&#34;https://notes.joschua.io/50&amp;#43;Slipbox/Digital&amp;#43;garden&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;(Digital Garden, Joschua)&lt;/a&gt; This is a practice of Working in Public.&lt;/p&gt;
&lt;h2 id=&#34;working-in-public&#34;&gt;Working In Public&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://s18798.pcdn.co/motivationlab/wp-content/uploads/sites/6235/2023/02/two-routes-to-the-sr-oof-mot-and-goals.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Studies show that statistically, people are more likely to do stuff if they keep their intentions in private.&lt;/a&gt; But at times though that statement can seem counter intuitive. Often, people share their weight loss publicly on Facebook or Twitter or Instagram. Many report that doing so is a great way to stay motivated.&lt;/p&gt;
&lt;p&gt;When you think about it, some of the reason, people post things online is because it provides a way for you to receive praise along the way. A quote that sticks with me is&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Become a documentarian of what you do&amp;rdquo; - Austin Kleon, Author of Show Your Work&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Becoming a documentarian means that you will develop very quickly&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your Metacognition&lt;/li&gt;
&lt;li&gt;Quick Feedback Loops on Content&lt;/li&gt;
&lt;li&gt;Increased Creativity.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By documenting your self, you are working your Metacognition. You are working on thinking of your thoughts. Should I have done that? Should I have done this instead. Why did I take that route? Was it because of an experience I had? Working your metacognition and &lt;em&gt;thinking&lt;/em&gt; about your thinking allows for you to quickly determine fallacies in your thought pattern. It also helps you explain in better depth, what you are working on.&lt;/p&gt;
&lt;p&gt;Working in public also forces you to document not only your thoughts, but also your steps taken to get there. Doing this its self can help you identify un necessary steps and find better work flows.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Setting a Hostname on Linux</title>
        <link>https://unorthodoxdev.net/post/setting-a-hostname-on-linux/</link>
        <pubDate>Wed, 19 Jul 2023 20:58:46 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/setting-a-hostname-on-linux/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;⚠️ Danger
You will need administrative access to the device in question. Changing a hostname can have unintended catastrophic consequences if done without proper consideration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A hostname is a computers human readable address that allows you to communicate with it, regardless of weather or not you know what its IP address is. Hostnames are pratcial and easy to remember. For whatever reason if you need to reset your hostname on a linux machine, you can follow the below instructions&lt;/p&gt;
&lt;p&gt;To view your current hostname type&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hostname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When I do so on the current machine, I see that for whatever reason the machines name is set to localhost. This is a problem as localhost also happens to be an alias to &lt;a class=&#34;link&#34; href=&#34;http://localhost/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;127.0.0.1&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;temporarily&#34;&gt;Temporarily&lt;/h1&gt;
&lt;p&gt;To temporarily reset the hostname of the machine I should do the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hostname changeme
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Again though, unfortunately this only keeps the hostname that way until the next reboot. This might be good for testing or even just to get a prod server off of a bearing load and replace it with a backup server. But for a more permanent and serious effect, we should do the following.&lt;/p&gt;
&lt;h1 id=&#34;permanently&#34;&gt;Permanently&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hostnamectl set-hostname imstuck
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above command should set the hostname immediately as well as it should stick beyond a reboot. To confirm that the name has been configured permanently we can check the following file &lt;code&gt;/etc/hostname&lt;/code&gt; and confirm the contents are what we are expecting. The thing I would do in this case is to reboot as soon as possible so that permanent hostname can really take affect and your DNS servers can update accordingly.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Linux Administration Tips and Tricks</title>
        <link>https://unorthodoxdev.net/post/linux-administration-tips-and-tricks/</link>
        <pubDate>Wed, 19 Jul 2023 20:58:00 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/linux-administration-tips-and-tricks/</guid>
        <description>&lt;p&gt;These notes should work on given any GNU / Linux based operating system. Although, should you run into any road blocks future me. Im sorry for lying to you :(.&lt;/p&gt;
&lt;h1 id=&#34;service-monitoring&#34;&gt;Service Monitoring&lt;/h1&gt;
&lt;p&gt;Services are a integral part of every operating system. How can I monitor and troubleshoot system services when things go wrong?&lt;/p&gt;
&lt;h2 id=&#34;system-services&#34;&gt;System Services&lt;/h2&gt;
&lt;p&gt;This command in a very cute way, will display all of the services installed on your server, and then display them accordingly with + or - signs to indicate weather or not it is running.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service --status-all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using grep, you can highlight services that are running (+) or stopped (-) for easy identification.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service --status-all | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ + ]&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Grep can also help you identify a specific service given you know the name like &lt;code&gt;ssh&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;running-processs&#34;&gt;Running Process&amp;rsquo;s&lt;/h2&gt;
&lt;p&gt;PS displays information about a selection of the active processes. It is an alternative to TOP that only prints once. By default &lt;code&gt;ps&lt;/code&gt; selects all processes with the same user id (EUID). It will show you the Process ID (PID) and the terminal associated with the process (TTY), the cumulated cpu time in [DD-]hh:mm:ss and the executable name (CMD).&lt;/p&gt;
&lt;p&gt;The below command will display all processes initiated by the user.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to see a specific users processes you can do the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps -U root -u root u
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to view every process on the system, you can do&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps -e
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;network-related-services&#34;&gt;Network Related Services&lt;/h2&gt;
&lt;p&gt;The below command will allow you to view all current connections and listening services on a system along with the processes and PIDs for each connection. It requires that you have the &lt;code&gt;net-tools&lt;/code&gt; package installed.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -tulpn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Say I wanted to look at what process was running on port 22&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -tulpn | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;22&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above command will return an output of any port that has 22 in it. For me currently, I have two services listening on port 22. One for IPv4 and IPv6&lt;/p&gt;
&lt;p&gt;Example Output&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ netsatat -tulpn | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;22&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcp    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 0.0.0.0:22    0.0.0.0:*    LISTEN    -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcp6   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; :::22         :::*         LISTEN    -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;networking-shenanigans&#34;&gt;Networking Shenanigans&lt;/h1&gt;
&lt;p&gt;Soy baboon, hay problemas de redes; ooh ooh ahh ahh.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://thumbs.dreamstime.com/z/monkey-scratching-his-head-animal-began-to-think-139656229.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;i-am-a-monkey.jpg | 500&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;first-things-first&#34;&gt;First &lt;em&gt;things&lt;/em&gt; first&lt;/h2&gt;
&lt;p&gt;Where am i on the subnet? The below tools will help you troubleshoot where your are on the subnet, what might be missing, and or misconfigured. To get a quick overview of all of your connected network cards, you can run the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;networkctl status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will print out the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;State: Routable or Not&lt;/li&gt;
&lt;li&gt;Online Status&lt;/li&gt;
&lt;li&gt;Address (IPv4 and IPv6)&lt;/li&gt;
&lt;li&gt;Gateway Address including the associated port.&lt;/li&gt;
&lt;li&gt;DNS Servers&lt;/li&gt;
&lt;li&gt;Domains&lt;/li&gt;
&lt;li&gt;NTP Servers.&lt;/li&gt;
&lt;li&gt;Network Card Configurations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If everything above looks good we can move on to looking more closely at our network cards.&lt;/p&gt;
&lt;h2 id=&#34;whats-my-ip&#34;&gt;Whats my ip?&lt;/h2&gt;
&lt;p&gt;The ip command allows you to show address information, manipulate routing, and display network devices, interfaces, and tunnels. It is a simple concept and hard tool to learn. There really five (5) modes to ip.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tunnel (Tunnel over IP)&lt;/li&gt;
&lt;li&gt;Route (Routing table entry)&lt;/li&gt;
&lt;li&gt;Rule (rule in routing policy database)&lt;/li&gt;
&lt;li&gt;VRF (Manage virtual routing and forwarding devices)&lt;/li&gt;
&lt;li&gt;XFRM (Manage IPSec policies)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To find the IP addresses assigned to your server, use&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip address show
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will give you each interface, numbered from 1 to ♾️ including the status (UP or DOWN), IPv4 and IPv6 address, and subnet mask and broadcast address.&lt;/p&gt;
&lt;p&gt;![[ip-address-show.png]]&lt;/p&gt;
&lt;p&gt;To force a static IP address on a interface, you can do the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip address add 10.66.10.9/16 dev eth0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then you will want to reboot the network card.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip link set eth0 down
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip link set eth0 up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Make sure for the above command you are physically connected to the server otherwise, you may lose connection if your actively using eth0.&lt;/p&gt;
&lt;p&gt;If things are still looking good, we can move on too routes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip route
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will show all of routes advertised by our DHCP server as available as well as their weighted value identified by the metric lable. You should have a few things listed here. If not I would investigate that.&lt;/p&gt;
&lt;h2 id=&#34;my-connection-is-getting-dropped-or-reset-somewhere-along-the-wire&#34;&gt;My connection is getting dropped, or reset somewhere along the wire.&lt;/h2&gt;
&lt;p&gt;MTR (Matts Trace-route) is a program that allows you to diagnose issues like these. To use MTR, you will want to do the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mtr google.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;My favorite flag to use with this is &lt;code&gt;-b&lt;/code&gt; it shows the dns name as well as the IP side by side allowing for a quick analysis of the network having issues.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mtr -b google.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also send a predetermined amount of pings with the &lt;code&gt;-c&lt;/code&gt; flag. Otherwise known as &lt;code&gt;count&lt;/code&gt; it allows you to select how many packets to send.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mtr -c &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; -b google.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The final command you will need to know about with mtr is &lt;code&gt;-r&lt;/code&gt; or record. This allows you to output the information into a txt file for later usage.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mtr -r -c &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; google.com &amp;gt; mtr-google.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that doing so will lock your terminal working on dumping that data so I would recommend a smaller count. If you really wanted to get something running and then do something else in the mean time, you could apply a ampersand (&amp;amp;) to the end of your command to have it run in the background. It will spit out a PID that you can search for later to see if its complete with&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ps -e | grep 15225
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;monitoring-network-traffic&#34;&gt;Monitoring network traffic&lt;/h2&gt;
&lt;p&gt;So, everything looks good, but data is still coming back corrupted? Lets look at the raw packets.&lt;/p&gt;
&lt;p&gt;The below command allows us to capture all traffic that comes or goes from this interface within the following ip and subnet range.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth0 net 10.66.0.0/16
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also filter based on source (&lt;code&gt;src&lt;/code&gt;) or destination (&lt;code&gt;dst&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth src net 10.1.0.0/24
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth dst net 10.1.0.0/24
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally we can also capture traffic only coming or going from a specific port.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth0 port &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Combining the port traffic with a specific host&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth0 host 10.66.10.123 and port &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Gorilla Balls</title>
        <link>https://unorthodoxdev.net/recipes/desserts/gorilla-balls/</link>
        <pubDate>Wed, 19 Jul 2023 18:26:44 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/recipes/desserts/gorilla-balls/</guid>
        <description>&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1 cup packed brown sugar.&lt;/li&gt;
&lt;li&gt;1/2 c. butter (cubed).&lt;/li&gt;
&lt;li&gt;2 tubes (12 oz each) refigerated biscuts.&lt;/li&gt;
&lt;li&gt;1/2 c. sugar.&lt;/li&gt;
&lt;li&gt;1 tbsp ground cinnamon.&lt;/li&gt;
&lt;li&gt;1 package (8oz) cream cheese, cut into 20 cubes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;directions&#34;&gt;Directions&lt;/h2&gt;
&lt;p&gt;In a small microwave-safe bowl, heat brown sugar and butter on high for one minute or until sugar is disolved. Set aside.&lt;/p&gt;
&lt;p&gt;Flatten each biscuit into a 3 inch circle.&lt;/p&gt;
&lt;p&gt;Place cream cheese cube in center. Push the sides of the biscuit around cream cheese and form into ball so biscuit is wrapped all around cream cheese.&lt;/p&gt;
&lt;p&gt;Mix sugar (1/2 cup) with cinnamon. Roll ball in cinnamon / sugar mixuture and place in 8&amp;quot;x8&amp;quot; pan square glass baking dish.&lt;/p&gt;
&lt;p&gt;Once all the balls are in the baking dish, sprinkle the remaning cinnamon / sugar mixture over top. Then pour evenly the brownsugar / butter mixture over balls.&lt;/p&gt;
&lt;p&gt;Bake at 350 degrees for 45 minutes or until golden brown.&lt;/p&gt;
&lt;p&gt;Once out of the oven, let cool 10-15 minutes.&lt;/p&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Cowboy Cookies</title>
        <link>https://unorthodoxdev.net/recipes/desserts/cowboy-cookies/</link>
        <pubDate>Wed, 19 Jul 2023 14:06:29 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/recipes/desserts/cowboy-cookies/</guid>
        <description>&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2 cups flour&lt;/li&gt;
&lt;li&gt;1/2 tsp baking powder&lt;/li&gt;
&lt;li&gt;1 tsp baking soda&lt;/li&gt;
&lt;li&gt;1/2 tsp salt&lt;/li&gt;
&lt;li&gt;1/2 cup butter&lt;/li&gt;
&lt;li&gt;1/2 cup vegetable oil&lt;/li&gt;
&lt;li&gt;1 cup backed light brown sugar&lt;/li&gt;
&lt;li&gt;1 cup white sugar&lt;/li&gt;
&lt;li&gt;2 eggs&lt;/li&gt;
&lt;li&gt;1 tsp vanilla extract&lt;/li&gt;
&lt;li&gt;2 cups quick cooking oats&lt;/li&gt;
&lt;li&gt;1 cup semi-sweet chocolate chips or other mix-ins&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;directions&#34;&gt;Directions&lt;/h2&gt;
&lt;p&gt;Preheat oven to 350 F
Mix flour, baking powder, baking soda, and salt together, set aside
Cream butter, oil, and sugars together until light and fluffy
Add eggs and vanilla and cream again
Add oats and flour mixture, mix until almost combined
Add mix-ins, mix until just combined
Drop by spoonfuls onto ungreased baking sheet, bake 10-12 minutes&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Tinga</title>
        <link>https://unorthodoxdev.net/recipes/entrees/tinga/</link>
        <pubDate>Wed, 19 Jul 2023 13:57:24 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/recipes/entrees/tinga/</guid>
        <description>&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Large Yellow Onion.&lt;/li&gt;
&lt;li&gt;Oil.&lt;/li&gt;
&lt;li&gt;Stewed Tomatoes (Can be home made or from a can).&lt;/li&gt;
&lt;li&gt;Chipotle peppers in adobo sauce.&lt;/li&gt;
&lt;li&gt;Tostadas&lt;/li&gt;
&lt;li&gt;Sour cream&lt;/li&gt;
&lt;li&gt;Chicken breasts&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;directions&#34;&gt;Directions&lt;/h2&gt;
&lt;p&gt;In a large pot, begin to boil your chicken. Once your chicken is fully cooked, remove it from the water and allow time for it to cool. Once cool, begin to shread the chicken by hand.&lt;/p&gt;
&lt;p&gt;While the pot of chicken is boiling you could begin to add your tomatoes and chipotle peppers in (if raw and not from a can) to begin boiling, or add it to its own pot and boil that way.&lt;/p&gt;
&lt;p&gt;Once the chicken is shredded, begin to chop your onion. You want long pieces of onion so avoid dicing them.&lt;/p&gt;
&lt;p&gt;Add oil to a pan and begin to pan fry your onions, while they are getting tender pour out your tomatoes and adobo pepers and chipotle sauce into a blender and mix until everything is done. It does not hurt to add some chicken broth or vegitble broth in this step.&lt;/p&gt;
&lt;p&gt;Add your chicken into the pot of onions and mix, slowly add the tinga sauce we made in the previous step to the pot and combine. The chicken should be swimming in the sauce.&lt;/p&gt;
&lt;p&gt;Allow the chicken to marinate and the sauce to thinken up and lose some whater.&lt;/p&gt;
&lt;p&gt;Once you are ready begin to serve the tinga on tostadas, with pickeled onions, raddish, lettuce, beans, sour cream, or whatever else floats your boat.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Andrea&#39;s Chilli Recipe</title>
        <link>https://unorthodoxdev.net/recipes/entrees/andreas-chili-recipe/</link>
        <pubDate>Wed, 19 Jul 2023 13:24:49 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/recipes/entrees/andreas-chili-recipe/</guid>
        <description>&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1 lb ground beef&lt;/li&gt;
&lt;li&gt;1 medium onion, chopped&lt;/li&gt;
&lt;li&gt;1 green pepper chopped&lt;/li&gt;
&lt;li&gt;2 stalks of celery, chopped.&lt;/li&gt;
&lt;li&gt;1 can black beans rinsed and drained.&lt;/li&gt;
&lt;li&gt;1 can dark red kidney beans rinsed and drained&lt;/li&gt;
&lt;li&gt;1 can garbonzo beans, rinsed and drained.&lt;/li&gt;
&lt;li&gt;1 can kidney beans in chili sauce (&lt;em&gt;do not drain or rinse these&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;1 can corn rinsed and drained&lt;/li&gt;
&lt;li&gt;2 cans diced tomatoes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;directions&#34;&gt;Directions&lt;/h2&gt;
&lt;p&gt;Brow beef in skillet over medium heat until no longer pink. Transfer to large pot. Pour 1tbsp vegetable oil into same skillet and heat over medium heat.&lt;/p&gt;
&lt;p&gt;Add onion, pepper and celery and cook until onions are transparent.&lt;/p&gt;
&lt;p&gt;Transfer them to the pot and add black beans, kidney beans, garbonzo beans, kidney beans in chili sauce, and corn to pot. Add chili mix and both cans of tomatoes. Plus 2 cans of water to pot.&lt;/p&gt;
&lt;p&gt;Simmer uncovered on medium high heat for 20 to 30 minutes, stirring occasionally.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Bannana Bread</title>
        <link>https://unorthodoxdev.net/recipes/desserts/bannana-bread/</link>
        <pubDate>Wed, 19 Jul 2023 13:24:49 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/recipes/desserts/bannana-bread/</guid>
        <description>&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;3 1/2 cups of sifted all purpose flour&lt;/li&gt;
&lt;li&gt;3 tsp baking powder&lt;/li&gt;
&lt;li&gt;1 tsp salt&lt;/li&gt;
&lt;li&gt;1 tsp baking soda&lt;/li&gt;
&lt;li&gt;2 cups of mashed ripe bananas&lt;/li&gt;
&lt;li&gt;2 tsp of lemon juice&lt;/li&gt;
&lt;li&gt;3/4 cups of shortening&lt;/li&gt;
&lt;li&gt;1 1/2 cup of sugar&lt;/li&gt;
&lt;li&gt;3 eggs&lt;/li&gt;
&lt;li&gt;3/4 cups of milk&lt;/li&gt;
&lt;li&gt;1/2 chopped walnuts or pecans&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;directions&#34;&gt;Directions&lt;/h2&gt;
&lt;p&gt;Sift together flour, baking powder, salt, and baking soda, combine bananas and lemon juice. Mix well.&lt;/p&gt;
&lt;p&gt;Cream together shortening and sugar in a bowl with electric mixer medium speed until fluffy. Add eggs and beath thoroughly until very light and fluffy.&lt;/p&gt;
&lt;p&gt;Add dry ingredients. Optionally, with milk, add bananas and nuts. Beat after each addition. Pour into 2 greased 8 1/2&amp;quot; x 4 1/2&amp;quot; x 2 1/2&amp;quot; loaf pans.&lt;/p&gt;
&lt;p&gt;Bake @ 350 for 1 hour or until when a wooden toothpick inserted comes out clean. Cool in pans for 10 minutes.&lt;/p&gt;
&lt;p&gt;Remove from pans, cool completely. Then wrap in saran wrap and store in the refridgerator&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Blueberry Breakfast Bars</title>
        <link>https://unorthodoxdev.net/recipes/desayuno/blueberry-breakfast-bars/</link>
        <pubDate>Wed, 19 Jul 2023 13:24:49 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/recipes/desayuno/blueberry-breakfast-bars/</guid>
        <description>&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1 3/4 cup of sugar&lt;/li&gt;
&lt;li&gt;1 cup of butter&lt;/li&gt;
&lt;li&gt;4 eggs&lt;/li&gt;
&lt;li&gt;1 tsp vanilla extract&lt;/li&gt;
&lt;li&gt;3 cups of flour&lt;/li&gt;
&lt;li&gt;1 1/2 tsp baking poweder&lt;/li&gt;
&lt;li&gt;21 oz blueberry pie filling&lt;/li&gt;
&lt;li&gt;1 tbsp butter melted&lt;/li&gt;
&lt;li&gt;2 tbsp lemon juice&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;directions&#34;&gt;Directions&lt;/h2&gt;
&lt;p&gt;Cream sugar and butter, add eggs and vanilla. Beat well.&lt;/p&gt;
&lt;p&gt;Ad flour and bakin gpowder, stir until well blended. Spread half of the mixture into a greased 15&amp;quot; x 10&amp;quot; pan.&lt;/p&gt;
&lt;p&gt;Carefully top with pie filling. Drop remaining dough ontop by teaspoonfulls.&lt;/p&gt;
&lt;p&gt;Bake @ 350 degrees farenheigh for 45 minutes or until golden. Do not underbake.&lt;/p&gt;
&lt;p&gt;Combine powdered sugar melted butter and lemon juice, drizzel over warm bars.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Peanut Butter Cereal Bars</title>
        <link>https://unorthodoxdev.net/recipes/desayuno/peanut-butter-cereal-bars/</link>
        <pubDate>Wed, 19 Jul 2023 13:24:49 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/recipes/desayuno/peanut-butter-cereal-bars/</guid>
        <description>&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;3 cups miniature marshmallows&lt;/li&gt;
&lt;li&gt;3 tsp margarine or butter&lt;/li&gt;
&lt;li&gt;1/2 cup peanut butter&lt;/li&gt;
&lt;li&gt;3 1/2 cups crispy rice cereal&lt;/li&gt;
&lt;li&gt;1 cup uncooked quick oats&lt;/li&gt;
&lt;li&gt;1/3 cup mini semi-sweet chocolate chips&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;directions&#34;&gt;Directions&lt;/h2&gt;
&lt;p&gt;Combine marshmallows and margarine in a large microwavable bowl. Microwave on high for 15 seconds.&lt;/p&gt;
&lt;p&gt;Stir;&lt;/p&gt;
&lt;p&gt;Continue to microwave 1 minute.&lt;/p&gt;
&lt;p&gt;Stir until marshmallows are melted and mixture is smooth.&lt;/p&gt;
&lt;p&gt;Add peanut butter.&lt;/p&gt;
&lt;p&gt;Stir;&lt;/p&gt;
&lt;p&gt;Add cereal and oats.&lt;/p&gt;
&lt;p&gt;Stir until well coated.&lt;/p&gt;
&lt;p&gt;Spread into prepaired pan&lt;/p&gt;
&lt;p&gt;Immediately sprinkle chocolate chips on top. Lightly press.&lt;/p&gt;
&lt;p&gt;Cool completly in pan. Cut into bars.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Sunday Brunch Casserole</title>
        <link>https://unorthodoxdev.net/recipes/desayuno/sunday-brunch-casserole/</link>
        <pubDate>Wed, 19 Jul 2023 13:24:49 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/recipes/desayuno/sunday-brunch-casserole/</guid>
        <description>&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1/2lb sliced bacon&lt;/li&gt;
&lt;li&gt;1/2 cup of chopped onion&lt;/li&gt;
&lt;li&gt;1/2 cup chopped green pepper&lt;/li&gt;
&lt;li&gt;12 eggs&lt;/li&gt;
&lt;li&gt;1 cup milk&lt;/li&gt;
&lt;li&gt;1 package (16 oz) frozen hash brown potatoes thawed.&lt;/li&gt;
&lt;li&gt;1 cup (4 oz) shredded cheddar cheese&lt;/li&gt;
&lt;li&gt;1 tsp salt&lt;/li&gt;
&lt;li&gt;1/2 tsp pepper&lt;/li&gt;
&lt;li&gt;1/4 tsp dill weed&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;directions&#34;&gt;Directions&lt;/h2&gt;
&lt;p&gt;In a large skillet, cook bacon over medium heat until crispy.&lt;/p&gt;
&lt;p&gt;Remove to paper towel lined plate to drain.&lt;/p&gt;
&lt;p&gt;Reserving 2 tbsp of drippings, crumble bacon and set aside.&lt;/p&gt;
&lt;p&gt;In the same skillet, saute onion and green pper in drippings until tender. Remove with a slotted spoon.&lt;/p&gt;
&lt;p&gt;In a large bowl whisk the eggs and milk. Stir in hashbrowns, cheese, salt, pepper, dill, and onion. Add reserved bacon.&lt;/p&gt;
&lt;p&gt;Transfer to a greased 13&amp;quot; x 9&amp;quot; x 2&amp;quot; baking dish. Bake covered @ 350 for 35 to 45 minutes or until a knife inserted near center comes out clean.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Taco Salad</title>
        <link>https://unorthodoxdev.net/recipes/entrees/taco-salad/</link>
        <pubDate>Wed, 19 Jul 2023 13:24:49 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/recipes/entrees/taco-salad/</guid>
        <description>&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1 head of lettuce, shredded&lt;/li&gt;
&lt;li&gt;1 medium onion, chopped&lt;/li&gt;
&lt;li&gt;1 lb hamburger browned&lt;/li&gt;
&lt;li&gt;2 cups of cheddar cheese shredded&lt;/li&gt;
&lt;li&gt;3 medium tomatoes, chopped&lt;/li&gt;
&lt;li&gt;1 bag dorites crushed&lt;/li&gt;
&lt;li&gt;1/2 to 1 bottle Western French Dressing (8 oz)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;directions&#34;&gt;Directions&lt;/h2&gt;
&lt;p&gt;In a large bowl, layer each ingredient strating with lettuce and ending with tomatoes. Toss with western dressing and crushed doritos just before serving.&lt;/p&gt;
&lt;p&gt;If you are planning for left overs, allow guests to add the doritos and dressing on their own to prevent any soggynonsens.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Comment</title>
        <link>https://unorthodoxdev.net/comment/</link>
        <pubDate>Wed, 19 Jul 2023 13:24:19 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/comment/</guid>
        <description></description>
        </item>
        <item>
        <title>Custom Start Menu Layouts</title>
        <link>https://unorthodoxdev.net/post/custom-start-menu-layouts/</link>
        <pubDate>Wed, 19 Jul 2023 12:31:03 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/custom-start-menu-layouts/</guid>
        <description>&lt;p&gt;Windows 11 and Start Menus &lt;em&gt;suck.&lt;/em&gt; Nothing works the way Microsoft says it should unless you use Intune. So to get around it, we just copy the bin. For now I&amp;rsquo;m doing both, considering sometime in the future Microsoft might get its stuff together and allow the JSON file to work.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unorthodoxdev.net/post/custom-start-menu-layouts/start-menu-layouts.png&#34;
	width=&#34;667&#34;
	height=&#34;803&#34;
	srcset=&#34;https://unorthodoxdev.net/post/custom-start-menu-layouts/start-menu-layouts_hu670cf9dab5e2357c73ece24347d6e12a_362363_480x0_resize_box_3.png 480w, https://unorthodoxdev.net/post/custom-start-menu-layouts/start-menu-layouts_hu670cf9dab5e2357c73ece24347d6e12a_362363_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Start Menu Layouts&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;83&#34;
		data-flex-basis=&#34;199px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;creating-a-new-layout&#34;&gt;Creating a new Layout&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;On a build PC configure your new layout.&lt;/li&gt;
&lt;li&gt;run the &lt;code&gt;Export-StartLayout&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;Modify the &lt;code&gt;StartLayout&lt;/code&gt; file and change the &lt;code&gt;pinnedList&lt;/code&gt; to &lt;code&gt;primaryOEMPins&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Copy the JSON file to &lt;code&gt;C:\Users\Default\AppData\Local\Microsof\Windows\Shell&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Alternatively, windows holds an encrypted version of the startup file in the &lt;code&gt;%LocalAppData%\Packages\Microsoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy\LocalState&lt;/code&gt; folder. Copying the &lt;code&gt;start.bin&lt;/code&gt; file to whatever computers same folder, will essentially do the same thing.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve also created a mini program that you can use to quickly do the above commands to quickly reproduce the steps above. I will put the latest version of the source blow, alternatively you can check my Github repository out here &lt;a class=&#34;link&#34; href=&#34;https://github.com/ofgrenudo/confs/tree/main/scripts/start-layouts&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ofgrenudo/confs/tree/main/scripts/start-layouts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install.bat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmd /c copy LayoutModification.json C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;efault&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;ppdata&lt;span style=&#34;color:#ae81ff&#34;&gt;\l&lt;/span&gt;ocal&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;hell&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ayoutModification.json /y 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmd /c copy start.bin C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;efault&lt;span style=&#34;color:#ae81ff&#34;&gt;\A&lt;/span&gt;ppData&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocal&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;ackages&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocalState
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;do-it-again.bat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@echo off
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;powershell.exe Invoke-Command -scriptbloc &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Export-StartLayout -Path LayoutModifications.json&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmd /c copy %LocalAppdata%&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;ackages&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocalState&lt;span style=&#34;color:#ae81ff&#34;&gt;\s&lt;/span&gt;tart.bin start.bin /y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmd /c copy %LocalAppdata%&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;ackages&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocalState&lt;span style=&#34;color:#ae81ff&#34;&gt;\s&lt;/span&gt;tart2.bin start.bin /y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Echo Remember to Update pinnedList to primaryOEMPins
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pause
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Migrating Ghost Blog Domain Names</title>
        <link>https://unorthodoxdev.net/post/migrating-ghost-blog-domain-names/</link>
        <pubDate>Wed, 19 Jul 2023 12:20:21 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/migrating-ghost-blog-domain-names/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;Note! I have migrated away from ghost blog and now manage my site on hugo!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For some reason when I was looking up how to change [[domain names]] for my ghost blog, I kept running into recommendations that stated I should just reinstall ghost. I really don&amp;rsquo;t want to do that especially since so much content exists on this server already. It also reminded me that I probably need to take regular backups of the server anyways. Or at least, double book blog posts somewhere just in case! (Truthfully most posts end up in my notebook to begin with, and end up polished on the website). Below are my steps to migrate my blogs DNS record.&lt;/p&gt;
&lt;p&gt;Set your new DNS record, a day in advanced to the IP address of your server. In my case I was migrating from &lt;a class=&#34;link&#34; href=&#34;https://blog.unorthodoxdev.net&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.unorthodoxdev.net&lt;/a&gt; to &lt;a class=&#34;link&#34; href=&#34;https://unorthodoxdev.net&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://unorthodoxdev.net&lt;/a&gt;. I created a ANAME record and allowed it to propagate overnight. In the morning, I did the below steps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ghost config url {new_url}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm /etc/nginx/sites-enabled/*.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ghost setup ssl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ghost restart&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally you want to visit your website and check your cert and go from there!&lt;/p&gt;
&lt;p&gt;I would also like to throw in that you might want to remove your ANAME record for whatever your website was before and upgrade it to a CNAME record. CNAME records are really just a redirect to whatever ANAME record you provide it.&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://unorthodoxdev.net/menu/security/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://unorthodoxdev.net/menu/security/</guid>
        <description></description>
        </item>
        <item>
        <title></title>
        <link>https://unorthodoxdev.net/menu/software/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://unorthodoxdev.net/menu/software/</guid>
        <description></description>
        </item>
        <item>
        <title>Search</title>
        <link>https://unorthodoxdev.net/page/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://unorthodoxdev.net/page/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
