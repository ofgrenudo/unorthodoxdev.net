<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Unorthodoxdev</title>
        <link>https://unorthodoxdev.net/post/</link>
        <description>Recent content in Posts on Unorthodoxdev</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Â© 2022-2023 [Joshua Winters-Brown](https://unorthodoxdev.net)</copyright>
        <lastBuildDate>Thu, 12 Oct 2023 16:45:31 -0400</lastBuildDate><atom:link href="https://unorthodoxdev.net/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Flush Dns on Mac</title>
        <link>https://unorthodoxdev.net/post/flush-dns-on-mac/</link>
        <pubDate>Thu, 12 Oct 2023 16:45:31 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/flush-dns-on-mac/</guid>
        <description>&lt;p&gt;Gah, they make everything so hard. (I need to run two simple commands.) Why cant I just run one command and flush the dns on my mac? Well im sure theres a better way to do this&amp;hellip; (there is)&lt;/p&gt;
&lt;p&gt;Welcome to flushdns(.sh)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This script will clear your dns cache on your mac. It has been tested on macOS 13.4 Ventura&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Joshua Winters-Brown&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  _____ &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  |   D &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  |   | &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  |   | &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  \___|            _ &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    ||  _______  -( (- &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    |_&amp;#39;(-------)  &amp;#39;-&amp;#39; &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;       |       / &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; _____,-\__..__|_____ &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; Your DNS has been flushed... &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Throw this script into your &lt;code&gt;/usr/local/bin&lt;/code&gt; and you can run flushdns from anywhere in the terminal.&lt;/p&gt;
&lt;p&gt;Tada!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Dont Update Nginx Without a Backup of Configs</title>
        <link>https://unorthodoxdev.net/post/dont-update-nginx-without-a-backup-of-configs/</link>
        <pubDate>Thu, 05 Oct 2023 14:58:10 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/dont-update-nginx-without-a-backup-of-configs/</guid>
        <description>&lt;p&gt;Allrght, I did a vulnerability scan on the web server, there was something about the version of nginx installed had a flaw in it, so I went ahead and patched the nginx install. Ofcourse only because it is patch thursday and it might as well be on a list of things todo. Well, everything went smoothly; I upgraded to the latest version, refreshed the website in the browser, checked my config file, and were good to go. I then promptly left for lunch and didnt get the chance to check back at the website until approximately 7 UTC. Well, the website was infact not good. it was down, and probably down since i made those changes. I began to search for the issue. A quick grep, showed that my config files all existed and contained the domain name and hostname of the website. So whats the issue, why is it not reading my configs? Well that was the problem, and quickly came the solution. When you upgrade the nginx installation it overwrites your previous config file. Im not sure if there was any other magick stuff I was doing in the config file before I updated, but I included the sites-available directory, and were good to go. So yeah, the site was down for aproximately 3 hours. Thanks chaps :)&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Creating and Managing a SSL Cert</title>
        <link>https://unorthodoxdev.net/post/creating-and-managing-a-ssl-cert/</link>
        <pubDate>Thu, 21 Sep 2023 16:39:17 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/creating-and-managing-a-ssl-cert/</guid>
        <description>&lt;p&gt;This guide is intended for Ubuntu 22.04 and is intended for use with a Apache2 web server. To get started we need to make sure you have Apache2 installed, we can use grep to check. These instructions were written on a Ubuntu Server.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt list --installed | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apache2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next will need to allow Apache through the firewall on both http (80) and https (443). We can do so with the below command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ufw allow &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Apache Full&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next we will need to enable the Apache &lt;code&gt;mod_ssl&lt;/code&gt; module. The Apache &lt;code&gt;mod_ssl&lt;/code&gt; module will allow Apache to support SSL encryption. The command to do so is below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo a2enmod ssl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl restart apache2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, Apache is configured and ready for encryption. We can move onto generating a TLS certificate. To do so we will need to do the following below command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo openssl req -x509 -nodes -days &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt; -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Running the above command will prompt you to enter a bunch of information. Please follow through each of the steps and answer them completely. The following flags on the above command do as listed below&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Flag&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;req -x509&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This specifies that we want to use the X.509 certificate signing request managment. X.509 is a public key infrastructure standard that TLS adhears too.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-nodes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Nodes tells OpenSSL to skip the option to secure our certificate with a passphrase because we want apache to be able to read the file. A passphrase would prevent apache from being able to do so.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-days 365&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This option sets the length of time that the certificate will be considered valid. Here we have set it for one year. Browsers will reject just about any certificate that is valid for longer than a year.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-newkey rsa:2048&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This tells the program we want to generate a new certificate and key at the same time. the rsa:2048 makes it a RSA key that is 2048 bits long.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-keyout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This line tells the program where to place the private key file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-out&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This line tells the program where to place the certificate that we are creating.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As a general note, certificates and their keys are generally recommended to be put in the &lt;code&gt;/etc/ssl/private&lt;/code&gt; (for keys) and &lt;code&gt;/etc/ssl/certs/&lt;/code&gt; (for certificates). It is a best practice that we should employ.&lt;/p&gt;
&lt;p&gt;To recap we have just created a key and a certificate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/ssl/private/apache-selfsigned.key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/ssl/certs/apache-selfsigned.crt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can test if either file exists by, running the following command&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo locate apache-selfsigned.key
locate apache-selfsigned.key
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;configure-apache-to-use-tls&#34;&gt;Configure Apache to use TLS&lt;/h2&gt;
&lt;p&gt;Since we have created our self signed certificates. We will then need to tell Apache to use them. We can do so by editing our Apache .conf file. These are typically in the &lt;code&gt;/etc/apache2/sites-availabe&lt;/code&gt; folder. We will start by creating a new file in the &lt;code&gt;/etc/apache2/sites-available/&lt;/code&gt; folder.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo vim /etc/apache2/sites-available/my_website.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;next you will want to paste in the following information. Make sure to update it accordingly to before creating this file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;VirtualHost *:443&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   ServerName your_domain_or_ip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   DocumentRoot /var/www/your_domain_or_ip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   SSLEngine on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   SSLCertificateFile /etc/ssl/certs/apache-selfsigned.crt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/VirtualHost&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next we will need to enable the configuration file with the &lt;code&gt;a2ensite&lt;/code&gt; tool.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo a2ensite my_website.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl reload apache2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, your web server should be good to go with a self signed cert. Now I would recommend you visit it and ensuring that you are using the &lt;code&gt;https://&lt;/code&gt; prefix. If alls well, you should get a error, saying that it cant verify the identity of the server. This is normal behavior because in fact, we gave it a self signed cert. In the future, It would be advisable to get your certificates from a CA vender.&lt;/p&gt;
&lt;h2 id=&#34;i-no-longer-want-any-http-requests&#34;&gt;I no longer want any http:// requests&lt;/h2&gt;
&lt;p&gt;We can redirect all &lt;code&gt;http://&lt;/code&gt; to your &lt;code&gt;https://&lt;/code&gt; route relatively easily. To do so you will need to edit your .conf that we created above, and add the following configuration to it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;VirtualHost *:80&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	ServerName your_domain_or_ip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	Redirect / https://your_domain_or_ip/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/VirtualHost&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I would recommend doing a backup of the conf before hand just incase you break something in the process. You never really know what may happen.&lt;/p&gt;
&lt;p&gt;Now all you will need to do is bounce the service, and give it a run.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apachectl configtest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl reload apache2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can test this by attempting to force your browser to visit the insecure version of the site. To do so ensure that the prefix to the websites name is &lt;code&gt;http://&lt;/code&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Simple File Parsing Takes Three Hours</title>
        <link>https://unorthodoxdev.net/post/simple-file-parsing-takes-three-hours/</link>
        <pubDate>Thu, 21 Sep 2023 09:53:13 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/simple-file-parsing-takes-three-hours/</guid>
        <description>&lt;p&gt;NMAP really needs some kind of file output option that isnt leetcode, xml, or gibberish. I would kill for a csv output from nmap. Regardless, lets solve this problem. I chose to ues python because I figured it would be quick and easy and would take no time. I was in fact wrong; Im not quite as comfortable with python as I am with rust at this point, but thats ok. &lt;a class=&#34;link&#34; href=&#34;https://github.com/ofgrenudo/noparser/blob/main/noparser.py&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;It took about 2-3 hours to build and test a simple program&lt;/a&gt;. This stupid script, took a little over 40 minutes trying to figure out how to build a stupid CLI interface and I immediately realized I miss rusts built in fail handling. Your telling me that I have to try, except &lt;strong&gt;everything???&lt;/strong&gt;. Oh well it doesnt matter anyways this doesnt actually compile down to machine code there are no assembly jumps or calls, lets just do it&amp;hellip;.&lt;/p&gt;
&lt;p&gt;God I hate this I decided to just cave and research a few CLI libraries and landed on plac, which has some very terrible documentation. For example, they do not explicilty provide a way for you to accept a file path or string lol. I just had to play around with the program until I found something that works, but this library could literally kill for some more english in the documentation. After I got that going it was easy peasy lemon squeezy. Except, when you error out, it doesnt really tell you why if your in a try catch loop. So I have to effectively comment out the try catch loop, and lower my code a indentation bracket figure out what the hell is breaking my code, just to realize I forgot to pass a variable to a function but was referencing it anyways&amp;hellip;. Another downside to try catch. Why the hell is my program failing. Otherwise, this program is less than 40 lines without all the stupid comments.&lt;/p&gt;
&lt;p&gt;All I could think about was those intro to CS classes in college where your just recycling CSV parsing code over and over again for a whole semester and building stupid text UI. All those hours of code, ammounted to a waste of three hours at work trying to get a CSV. But was it worth the three hours one might ask? well, the fact that I can run and scan the network using NMAP, and imemdiately convert it to a csv file to later open in XSLX or another stupid app to make a report later in my day in seconds, I would say that yes. Yes spending the three hours fighting with try, catch loops was worth it.&lt;/p&gt;
&lt;p&gt;TLDR, noob gets wrekt by pythons immaculate error handling. Check out my project, &lt;a class=&#34;link&#34; href=&#34;https://github.com/ofgrenudo/noparser/tree/main&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;noparser&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Organizational Behaviour Examples</title>
        <link>https://unorthodoxdev.net/post/organizational-behaviour-examples/</link>
        <pubDate>Tue, 19 Sep 2023 17:36:35 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/organizational-behaviour-examples/</guid>
        <description>&lt;iframe width=&#34;100%&#34; height=&#34;700px&#34; src=&#34;https://www.youtube.com/embed/C-iaYYLK_oQ?si=pYwTBrfzrOqcDJtv&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;
&lt;p&gt;In a behavioural organization class, we have an assignment to watch a movie and pick a sceene from it where we notice some organizational behaviour coming into play. Below are my awnsers to this assignment.&lt;/p&gt;
&lt;h2 id=&#34;organizational-behaviours-in-media&#34;&gt;Organizational Behaviours in Media&lt;/h2&gt;
&lt;p&gt;This clip is from the movie &lt;strong&gt;Free Guy&lt;/strong&gt;. It is a movie about a bank teller, who learns that he is a non-playable character or NPC in an open-world video game, akin to GTA. In the story, the character goes on to become the hero, and saving two real life peoples lives as they discover the code that is running his character was stolen from them. In the recorded scene, we witness many Organizational Behaviors exhibited by Antwan, the owner of the company. One of the first things that Antwan does is use some conceptual skills.&lt;/p&gt;
&lt;p&gt;Initially the Main Character, Blue Shirt Guy, being an out of control NPC causes issues. Antwan sees the publicity of this event as an Opportunity to embellish and grow the company&amp;rsquo;s profits by maximizing the character&amp;rsquo;s image. We could also consider the &lt;strong&gt;Art Nerds&lt;/strong&gt; a Technical Skill, in being able to create and design the new Blue Shirt Guy Character.&lt;/p&gt;
&lt;p&gt;Another example of Technical Skills could be Keys being asked if he would like to be promoted to a developer or programmer. An example of Differentiation Strategy in this clip could be Keys attempting to wager Antwan on making a new and unique game that masters its craft through careful consideration and development.&lt;/p&gt;
&lt;p&gt;Antwan unfortunately shuts Keys down by rather taking an operational Excellence approach, demanding that they instead stick to what they are good at, and continue to profit on the framework that already exists.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>How to search Text files with grep</title>
        <link>https://unorthodoxdev.net/post/searching-text-files-with-grep/</link>
        <pubDate>Fri, 08 Sep 2023 07:55:32 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/searching-text-files-with-grep/</guid>
        <description>&lt;p&gt;Ever needed to find something in a directory filled with text files. Use grep. The command I enjoy to using is as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -Ril &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;what the H E double hockey sticks&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Where am i on the network?</title>
        <link>https://unorthodoxdev.net/post/where-am-i-on-the-network/</link>
        <pubDate>Thu, 07 Sep 2023 16:51:44 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/where-am-i-on-the-network/</guid>
        <description>&lt;p&gt;Ever wonder what port your connected to when plugged into a ethernet jack? Open up wireshark and apply a filter, searching for &lt;code&gt;cdp or lldp&lt;/code&gt; traffic. That will kick back:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The switches MAC Address.&lt;/li&gt;
&lt;li&gt;The port description.&lt;/li&gt;
&lt;li&gt;The switch system name.&lt;/li&gt;
&lt;li&gt;Some information about the operating system running on the switch.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Don&amp;rsquo;t see any information populating? Most likely your network admins have disabled your switches from transmitting CDP or LLDP traffic. In this case, im sorry this wont work for you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Have fun troubleshooting.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Vacation</title>
        <link>https://unorthodoxdev.net/post/vacation/</link>
        <pubDate>Thu, 07 Sep 2023 10:32:58 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/vacation/</guid>
        <description>&lt;img src="https://unorthodoxdev-bucket-public.s3.amazonaws.com/scorpion-hand.jpeg" alt="Featured image of post Vacation" /&gt;&lt;p&gt;Im back!&lt;/p&gt;
&lt;p&gt;Ive been gone for a little while now. I went on vacation to mexico for about 21 days to visit friends. I had a blast. Everything there is vastly different than here in the states. Where I live, &lt;a class=&#34;link&#34; href=&#34;https://www.sciencedirect.com/science/article/pii/S0277953600000046&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;if you need anything other than beer&lt;/a&gt; you need to drive about 5-20 minutes to get whatever you need. In Druango Durango Mexico, If I need to go to the store, its about a 5 minute walk to a Ley; The equivalent of a walmart or meijers. If im in the mood for some chips and a soda, theres a conveince store, or Oxxo within 2 to 5 minutes. Hungry for a burger, theres a place that sells hamburgesas down the street. Come on lets walk its only 10 minutes away! I will tell you though, I was a little dissapointed in the hamburgessa. I was expecting a &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=MULhB5_COAU&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;american hamburger&lt;/a&gt; but instead found, carne asada, a salchica split in two, hamon, lettuce tomatoe, onion, pickles, mayo, mustrard, ketchup all on a bun. It was decent, but wasnt what I was looking for.&lt;/p&gt;
&lt;p&gt;Across the street from where I stayed was a community center. A place where the community can host classes to teach all kinds of things. On Tuesdays and Thursdays theres karate class. On fridays theres dance class teaching you how to perform traditional Aztecan and Mayan dances. On Mondays and Wednesdays theres Singing Class. Tuesday evening they show you how to use a sowing machine and make dresses. Theres a park, with soccer goals, baskeball hoops, playground equipment, etc available all the time. Theres washers and dryers available for those who need them, etc. Over all the community center is something very strange to me. There arent many things like that in america. The closest I could think of is boys and girls club, but im not even sure thats everywhere in the states and Its most definetly not as flexiable as the community center.&lt;/p&gt;
&lt;p&gt;Over all I really enjoyed my trip and cant wait to go back. But for now, ive got school and work to focus on. Ill attach a few photos below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unorthodoxdev-bucket-public.s3.amazonaws.com/church.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;church.jpeg&#34;
	
	
&gt;
&lt;img src=&#34;https://unorthodoxdev-bucket-public.s3.amazonaws.com/paraguas.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;paraguas.jpeg&#34;
	
	
&gt;
&lt;img src=&#34;https://unorthodoxdev-bucket-public.s3.amazonaws.com/scorpion-hand.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;scorpion-hand.jpeg&#34;
	
	
&gt;
&lt;img src=&#34;https://unorthodoxdev-bucket-public.s3.amazonaws.com/terrain-two.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;terrain-two.jpeg&#34;
	
	
&gt;
&lt;img src=&#34;https://unorthodoxdev-bucket-public.s3.amazonaws.com/terrain.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;terrain.jpeg&#34;
	
	
&gt;
&lt;img src=&#34;https://unorthodoxdev-bucket-public.s3.amazonaws.com/theater.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;theater.jpeg&#34;
	
	
&gt;
&lt;img src=&#34;https://unorthodoxdev-bucket-public.s3.amazonaws.com/train-car.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;train-car.jpeg&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Advent of Code</title>
        <link>https://unorthodoxdev.net/post/advent-of-code/</link>
        <pubDate>Wed, 09 Aug 2023 15:07:00 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/advent-of-code/</guid>
        <description>&lt;p&gt;Advent of Code is a annual set of Christmas themed programming problem that follow an advent calendar. I have heard about Advent of Code (AoC from now on) before but never committed time or resources to it.&lt;/p&gt;
&lt;p&gt;Struggling to learn C, I decided to go through the AoC content from 2015 to current and complete each of the challenges with at a minimum, attempting to use C. The nice thing about doing the older problems, well really any problem, is that there are plenty of resources around online to help me work through and solve the problems.&lt;/p&gt;
&lt;p&gt;I plan to go through at least one problem a day on my lunch break if not more given time permits and upload it to my &lt;a class=&#34;link&#34; href=&#34;https://github.com/ofgrenudo/AoC&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;github repository&lt;/a&gt;. Depending on how I feel I may produce a write up of the problem, challenges I faced, my resolutions, how I could optimize, etc&amp;hellip; I think that this will be a fun exercise and prep me for when the 2023 AoC comes around.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fun Fact! I did not know that people could prestige programming problems but I recently learned, that people have prestige AoC. I guess at the end of the day, it is a game :)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Network Troubleshooting Methodology</title>
        <link>https://unorthodoxdev.net/post/network-troubleshooting-methodology/</link>
        <pubDate>Wed, 09 Aug 2023 14:17:19 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/network-troubleshooting-methodology/</guid>
        <description>&lt;p&gt;This is a guide i&amp;rsquo;ve created with some notes I have created while working through the networking+ content. While I do plenty of networking troubleshooting experience, these instructions ensure that I &lt;strong&gt;STOP&lt;/strong&gt;, and &lt;strong&gt;SLOWN DOWN&lt;/strong&gt; and think about the changes. Something else I enjoy about these instructions is they force me to think more about &lt;em&gt;change&lt;/em&gt; management. Something I need more practice with.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Gather as much information as possible. If possible, duplicate the problem.&lt;/li&gt;
&lt;li&gt;Break the problem down into meaningful bytes. What steps need to occur and in what order? a lot of people use this step as an opportunity to begin working their way &lt;strong&gt;up&lt;/strong&gt; or &lt;strong&gt;down&lt;/strong&gt; the OSI Model identifying the processes that take place.&lt;/li&gt;
&lt;li&gt;Generate a few different hypothesis&amp;rsquo;s and the steps needed to take to resolve these issues. Document these issues somewhere publicly where you and your peers can look back at them.&lt;/li&gt;
&lt;li&gt;When you begin making changes, document the steps taken to test your hypothesis and perform one change at a time. After you have completed the change, assess the situation and determine if the change has produced a favorable result.&lt;/li&gt;
&lt;li&gt;Once you have confirmed that you have resolved the issue, reach out the customer and confirm that they are seeing the same behavior as you are.&lt;/li&gt;
&lt;li&gt;Document, Document, Document everything.&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Finding Things to Do...</title>
        <link>https://unorthodoxdev.net/post/finding-things-to-do/</link>
        <pubDate>Mon, 07 Aug 2023 09:36:33 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/finding-things-to-do/</guid>
        <description>&lt;p&gt;I am the ultimate procrastinator. I can never seem to commit, or consider a project done. I have a perpetual train of thought going on when I think of projects or problems. I often wont even start a project, unless I can envision the end. Some people may see this as a good trait, being that I am able to plan the project, and goals out from start to finish instead of aimlessly working on something. Sometimes, I may already have the end goal of my project or problem determined, but my issue is then, finding a way to complete it. Maybe not all the tools are there for me that I hope there would have been.&lt;/p&gt;
&lt;p&gt;Lately I have been learning C. Not C++, not C#&amp;hellip; C. One thing I learned very quickly with C is that there is no hand holding. If you do not manage your memory, you&amp;rsquo;ve blown your program up. You don&amp;rsquo;t know how to do something, you&amp;rsquo;ve made your project 100 times harder now trying to include some foreign library, versus developing the solution your self. My initial Idea was to create a program, that pulls the API information from the local Transit station, and parses out the information into a pleasant way. This program in rust, hypothetically would be pretty quick, and i&amp;rsquo;ve already got an idea on how I would do it!&lt;/p&gt;
&lt;p&gt;I would start by using &lt;a class=&#34;link&#34; href=&#34;github.com/actix/actix&#34; &gt;actix&lt;/a&gt; to pull the API get request. parse the JSON response using &lt;a class=&#34;link&#34; href=&#34;serde.rs&#34; &gt;serde&lt;/a&gt;. Then use  &lt;a class=&#34;link&#34; href=&#34;https://github.com/ratatui-org/ratatui&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;rata-tui&lt;/a&gt; to generate a beautiful text UI for it. All together, given I didn&amp;rsquo;t run into any hiccups, this project would probably be done in maybe~ 2 to 3 days If I used rust.&lt;/p&gt;
&lt;p&gt;After almost a month of running through C projects and experiments. Ive found that, I am absolutely destroyed by the lack of features with C. My first challenge was making a get request to the Transit web api. I eventually resolved that issue using &lt;a class=&#34;link&#34; href=&#34;https://curl.se/libcurl/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;libcurl&lt;/a&gt; which is very terribly documented, and everything is just a pain in the ass to read an understand. But one other issue with using libcurl, is that it requires that the system the program is running on, &lt;strong&gt;contains&lt;/strong&gt; the application curl. That is an issue that I haven&amp;rsquo;t really ran into before when programming with rust. Everything is just code, that compiles to assembler that compiles to binary, that the machine understands and executes. Now i have to add another contingent, an application I cant/don&amp;rsquo;t want to package with my application.&lt;/p&gt;
&lt;p&gt;Now I understand why applications ship with  DLLs. Or why the applications have underlying conditions when installing them. Regardless of how I felt about including libcurl, I moved forth and began to deal with my newly found string that contains the response from my API. After many &lt;code&gt;segfault&lt;/code&gt;&amp;rsquo;s I&amp;rsquo;ve got to parse this JSON string. Like I stated above, I would simply just use the serde library. But because C doesn&amp;rsquo;t have a JSON library (C was made way before the web, or JSON existed) I need to create my own parser.&lt;/p&gt;
&lt;p&gt;The above two issues, is reason enough for me to understand why some hardcore C developers keep every piece of code they have. Because when they run into the same JSON parsing issue, they can look at the function, or file that they made last time, and implement the same function or file into the new program.Rust and most modern languages have provided such a standard, containing large standard libraries and easy to import and manage 3rd party libraries that It was hard for me to think of a time where that wasn&amp;rsquo;t an option.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgflip.com/4exi8f.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;based&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The thing I like the most about C is that it forces me to think. To use my &lt;em&gt;smooth&lt;/em&gt; brain on how to parse a JSON element, what are the rules that JSON employs? How can I connect to a HTTP Web server, on port 80? How can I save the response? All of these thoughts come from a &lt;em&gt;rough&lt;/em&gt; brain. One with ridges and valleys and peaks. Not mine.&lt;/p&gt;
&lt;p&gt;While, I think the Transit app i was planning on building with C was a bit too big for me to handle right now, my plan now is to finish it in Rust, and then In preparation for the 2023 Advent of Code, i would like to begin practicing my C solving those problems. Problems which are small and manageable, and I&amp;rsquo;m sure have plenty of resources online for the language that I will be using. Shoot, I&amp;rsquo;ve even found &lt;a class=&#34;link&#34; href=&#34;https://github.com/betaveros/noulith&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;a guy who created an entire language, for solving the Advent of Code problems&lt;/a&gt; conveniently in&amp;hellip;. Rust. So while i&amp;rsquo;ve completely changed the way I will handle my next app. I have added a completely other thing that I have dedicated my self to. Finding more things to do, when there is already so much.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgflip.com/56pjdz.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;smooth brain&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>In dire need of comments.</title>
        <link>https://unorthodoxdev.net/post/comment-board/</link>
        <pubDate>Tue, 01 Aug 2023 10:07:32 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/comment-board/</guid>
        <description>&lt;p&gt;I recently migrated my website from &lt;a class=&#34;link&#34; href=&#34;https://ghost.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ghost blog&lt;/a&gt; to &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo&lt;/a&gt; which is a static site generator compared to the all in one package you get with &lt;a class=&#34;link&#34; href=&#34;https://ghost.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ghost blog&lt;/a&gt;. One of the reasons I decided to make this change was honestly, I had no need for all of the many features that ghost blog provided. Something like Hugo was simple, and effective. It also allowed me to write my documents in mark down, and store the entirety of it in a git repository. Making the portability of my website insanely simple, compared to managing the ghost blog.&lt;/p&gt;
&lt;p&gt;One of the features I missed from ghost blog though, was the comment feature. Something I really enjoyed. With some Hugo blogs, they do enable you to add a comment feature, but requires that you have some kind of third party application that you sign up for. That pretty much was a no go for me. I don&amp;rsquo;t want to have my self or readers sign up for some ooey gooey third party provider. So because i&amp;rsquo;m lazy, I decided to create my own comment board.&lt;/p&gt;
&lt;p&gt;Ive been learning rust for some time now so I settled on that language. It would be a good proof of concept and really help me get my foot in the door when it comes to getting confidence in the language.&lt;/p&gt;
&lt;h2 id=&#34;planning&#34;&gt;Planning&lt;/h2&gt;
&lt;p&gt;Lets break down how we are going to do this.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;User must reach URL.&lt;/li&gt;
&lt;li&gt;User inputs the following, username, comment.&lt;/li&gt;
&lt;li&gt;User submits comment.&lt;/li&gt;
&lt;li&gt;Program submits comment to database after running it through some checks.&lt;/li&gt;
&lt;li&gt;Comment board is updated.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now that we have a general road map there are quite a few things we can extrapolate from this. One, I can already imagine how my data will look. Two, we can create a general rest API from this point forward. Lets start with our data template&lt;/p&gt;
&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;
&lt;p&gt;I decided to go with sqlite because Im not sure that this website will ever get enough use that I will need to migrate away from an sqlite file. Although if it ever did, im sure it wouldn&amp;rsquo;t be too much more complicated to migrate to a MariaDB or a full fledged Sql database.&lt;/p&gt;
&lt;p&gt;In general lets get what our data structure will look like&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Comment {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    id: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ip: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    username: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    timestamp: String,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    visible: &lt;span style=&#34;color:#a6e22e&#34;&gt;int32&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You&amp;rsquo;ll notice there are a few things here that I have added besides the username and comment. One of them being ID. That will be our entry&amp;rsquo;s primary key. I plan on keeping the IP for governance reasons (issue bans, etc), as well as a timestamp, for historical records. The visible key, will be a simple 1 or 0. If it is 1 then it is visible. If it is 0 then it is hidden. Say I get a derogatory or inappropriate comment, I would&amp;rsquo;t want to necessarily delete it these comments should be kept to be referenced to for example for a ban appeal.I would want to especially keep them if it were to say be life threatening etc. So to prevent displaying it, I will switch the visible to 0 and contact or inform the police of said threat. This way, I still have the comment but its not visible.&lt;/p&gt;
&lt;h3 id=&#34;api&#34;&gt;API&lt;/h3&gt;
&lt;p&gt;From the requirements above, theres a few things we can already build out API wise.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/comment/new&lt;/li&gt;
&lt;li&gt;/comment/id/&lt;id&gt;&lt;/li&gt;
&lt;li&gt;/comment/ip/&lt;ip&gt;&lt;/li&gt;
&lt;li&gt;/comment/username/&lt;username&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Building out the API this way also allows us to tailor, how and what we write when we begin to create our program. I now know that I will need quite a few get functions that return data based off of 3 unique queries. I can also identify that I only need one query to create any data.&lt;/p&gt;
&lt;p&gt;I hope that by now you can very clearly see the benefit of planning your program out, before actually typing any code. This will help you keep from getting lost while creating your program.&lt;/p&gt;
&lt;p&gt;Thats about it for the theory on how this comment board will work. In the future, when i&amp;rsquo;ve got everything figured out. I may look into creating either a tutorial series on what i&amp;rsquo;ve done so far, or create youtube videos (as there are not many tutorials out on youtube for rust quite yet).&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Implementing a Sick 504 Page</title>
        <link>https://unorthodoxdev.net/post/implementing-a-sick-504-page/</link>
        <pubDate>Thu, 27 Jul 2023 12:09:39 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/implementing-a-sick-504-page/</guid>
        <description>&lt;p&gt;Rust takes forever to build. Im sure I could do alot better deploying the application. But who knows, maybe im doing great at deploying my [comment board](https://unorthodoxdev. net/comment) but what if there is some bug that I introduced that crashes the server ð». What if while the server is crashed, Im at work??? Well good thing we can customize the default 504 page that nginx uses. So lets get started.&lt;/p&gt;
&lt;p&gt;First we will go to our &lt;code&gt;/var/www/html&lt;/code&gt; folder and create a page called &lt;code&gt;maintenance.html&lt;/code&gt;. Inside of maintenance I have put the following.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Site Maintenance&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;text-align&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;center&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;150&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;font&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt; Helvetica, &lt;span style=&#34;color:#66d9ef&#34;&gt;sans-serif&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#333&lt;/span&gt;; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;article&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;text-align&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;650&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;margin&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#dc8100&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;text-decoration&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;hover&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#333&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;text-decoration&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;article&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;I&amp;amp;rsquo;ll be back soon!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Sorry for the inconvenience but Im performing some maintenance at the moment. If you need to you can always &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mailto:joshuawintersbrown@gmail.com&amp;#34;&lt;/span&gt;&amp;gt;contact me&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;, otherwise I&amp;amp;rsquo;ll be back online shortly!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;amp;mdash; Joshua Winters-Brown&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;article&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Simple and sweet right? next, we have to edit our nginx default config. You can find that at &lt;code&gt;/etc/nginx/sites-available/default&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Remember! You must edit this files as sudo!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Inside of our config file, just below your ssl certificates (or your port 80 config. Who knows maybe your rocking http naked). paste the following&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-config&#34; data-lang=&#34;config&#34;&gt;error_page 502 /maintenance.html;
location = /maintenance.html {
    root /var/www/html;
    internal;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Next, you will need to restart your nginx server. You can do so via the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl restart nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, kill your service, and run to the url to try to capture the error.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pasteboard.co/HtneDCu6qMmC.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ill-be-back-soon.png&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>New Bloging System</title>
        <link>https://unorthodoxdev.net/post/new-blogging-system/</link>
        <pubDate>Fri, 21 Jul 2023 10:58:35 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/new-blogging-system/</guid>
        <description>&lt;img src="https://unorthodoxdev.net/post/new-blogging-system/this-is-fine.png" alt="Featured image of post New Bloging System" /&gt;&lt;p&gt;Ive migrated my website from the ghost blogging platform to &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo&lt;/a&gt; (go hugo, go hugo, go!). Its a little simpler and easier to manage. I also feel as though I have more controll. Currently, im using the hugo-stacked-theme as it looks the most appealing to me, and is not a massive website with insane overhead. It also comes with a indexing feature that allows me (and you ofcourse) to search my content for specific keywords.&lt;/p&gt;
&lt;p&gt;Another great thing about it being simple is I dont have to constantly monitor that the ghost instance isnt taking too much resources as the web server just lives on a static nginx route. The only thing I &lt;strong&gt;will&lt;/strong&gt; have to get used to is making sure that before I push to the remote repository, that I have ran &lt;code&gt;hugo&lt;/code&gt; so that it can build each of my pages.&lt;/p&gt;
&lt;p&gt;Currently I am manually logging into the web server and pulling the repostory whenever I feel like it. In the future, ideally id set a cron job for every 30 minutes or something like that.&lt;/p&gt;
&lt;p&gt;ehhh either way this new cms seems to be working. Keep in touch as im hoping to release a new feature to my website soon :)&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Read the Damn Instructions</title>
        <link>https://unorthodoxdev.net/post/read-the-damn-instructions/</link>
        <pubDate>Fri, 21 Jul 2023 10:50:07 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/read-the-damn-instructions/</guid>
        <description>&lt;p&gt;Read the damn instructions. Im working on a new project for the website, and Im trying to upload what I have to github (a simple readme nothing more).&lt;/p&gt;
&lt;p&gt;I create an empty repository, init, add, and commit locally. Set the remote repository, and try to push to the remote&amp;hellip; And it fails? What have I done? What did I do? I have done this probably thousands of times. Where did I mess up? Will I have to recreate the folder? Should I re init the local repo?&lt;/p&gt;
&lt;p&gt;What do i do?&lt;/p&gt;
&lt;p&gt;immediately I search the error &lt;code&gt;error, failed to push some refs to the remote github repository.&lt;/code&gt;. I find some stack overflow repository, and I begin reading. I trust stack over flow, they got some smart guys on there. Alot smarter guys on there than me because theres always awnsers to my questions.&lt;/p&gt;
&lt;p&gt;It doesnt work. It doesnt work, what did I do. I followed the advice of this internet stranger. They posted the awnser recently (2021) what have I done. This is a catosrophic faliure on my end. Ill never be able to recover from this.&lt;/p&gt;
&lt;p&gt;I switch tabs back to my github repository after reading the advice one strange lonlely internet post, and I read the instructions given to me by github.&lt;/p&gt;
&lt;p&gt;Oh&amp;hellip;&lt;/p&gt;
&lt;p&gt;Ive forgotten to set the primary branch. Maybe ive had too much coffee.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Ghost Printers</title>
        <link>https://unorthodoxdev.net/post/ghost-printers/</link>
        <pubDate>Thu, 20 Jul 2023 16:03:40 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/ghost-printers/</guid>
        <description>&lt;p&gt;Ive recently had an encounter with a printer that creates 100s of copies of its self within the computers printer settings. Ive spent quite a bit of time tinkering with this printer and its settings. I think Iâve come to a resolution. Overall, to recap what I did; Opening up the Regedit there were 100âs of keys associated with the Xerox printer. Typically, these registry keys are created when installing the printer and the windows printui.dll handles it. But the amount of registry keys meant that windows kept recreating these keys. I dug a little bit more into the registry keys and it appears that each of these keys had the following properties assigned to them. Name âPRT-AWH-321-COLORâ, Driver âXerox â¦â that was pretty much it. The rest of the fields were empty.&lt;/p&gt;
&lt;p&gt;I started off looking into removing these printers via a script etc. Doing so I found the existence of a registry key we can create that would have windows remove the printers on exit. To enable this feature you would have to create a 32bit dWord key in the following location &lt;code&gt;&amp;quot;HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Print\Providers\Client Side Rendering Print Provider&amp;quot;&lt;/code&gt; with the name &lt;code&gt;&amp;quot;RemovePrintersAtLogoff&amp;quot;&lt;/code&gt; and the value of 1.&lt;/p&gt;
&lt;p&gt;After creating this key, when a user logs out it should clear out any installed printers, and apply the group policy user settings next time a user logs in. Well creating that key and then logging out seemed to work. But those xerox registry keys persisted for some reason. I grabbed one of the GUIDS from a ghost printer and ran a search for all the instances I could find it in regedit. I ran across quite a few instances and ended up writing a script.&lt;/p&gt;
&lt;p&gt;We start by stopping the printer spooler, and then removing the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;onnections
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rinters
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;roviders
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\V&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; Connections
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;ow6432Node&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;onnections
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;ow6432Node&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rinters
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;ow6432Node&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;roviders
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;OFTWARE&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;ow6432Node&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rint&lt;span style=&#34;color:#ae81ff&#34;&gt;\V&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; Connections
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKCU:&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rinters
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKCU:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;oftware&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows NT&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentVersion&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rinterPorts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKEY_USERS&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;DEFAULT&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;rinters
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following below you need a system user context to remove. You can do so by using PSExec from Windows PowerToys.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentControlSet&lt;span style=&#34;color:#ae81ff&#34;&gt;\E&lt;/span&gt;num&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;WD&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;RINTENUM 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentControlSet&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrol&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;eviceClasses&lt;span style=&#34;color:#ae81ff&#34;&gt;\{&lt;/span&gt;0ecef634-6ef0-472a-8085-5ad023ecbccd&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrolSet001&lt;span style=&#34;color:#ae81ff&#34;&gt;\E&lt;/span&gt;num&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;WD&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;RINTENUM    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrolSet001&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrol&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;eviceClasses&lt;span style=&#34;color:#ae81ff&#34;&gt;\{&lt;/span&gt;0ecef634-6ef0-472a-8085-5ad023ecbccd&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrolSet002&lt;span style=&#34;color:#ae81ff&#34;&gt;\E&lt;/span&gt;num&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;WD&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;RINTENUM    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrolSet002&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrol&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;eviceClasses&lt;span style=&#34;color:#ae81ff&#34;&gt;\{&lt;/span&gt;0ecef634-6ef0-472a-8085-5ad023ecbccd&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HKLM:&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;YSTEM&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;urrentControlSet&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;ontrol&lt;span style=&#34;color:#ae81ff&#34;&gt;\C&lt;/span&gt;lass&lt;span style=&#34;color:#ae81ff&#34;&gt;\{&lt;/span&gt;1ed2bbf9-11f0-4084-b21f-ad83a8e6dcdc&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After doing so, when you open up the control panel all the printers should be grayed out. Because these printers are being added via group policy, doing a reboot, should resolve any issues we had previously. Once the computer comes back up again, all of those printers should remain grey, and anything that gets installed via group policy should then fill in with color. But shortly after, it started happening again. I kept getting notifications of the printer installing, over and over and over again.&lt;/p&gt;
&lt;p&gt;With that, its confirms that it is not some residual left over install, but narrows it down to one or two things. A messed up group policy or a bad driver. Looking at the group policy I could find anything wrong, so I decided to start at the driver. I took the computer off the domain, and downloaded the PCL, General, and PS, driver for the printer.&lt;/p&gt;
&lt;p&gt;Once the computers off the domain, I remove all printers. And repeat the above steps. After doing so I started with the identical driver installed, the General driver. I setup the printer and as soon as the install finishes. I immediately get the same issue again.&lt;/p&gt;
&lt;p&gt;Its no longer a group policy issue, its now a driver issue. Uninstall all the printers again and start from step one. Once I get to installing the printer I use the PCL driver. I had similar issues. Finally the Post Script (PS) driver ended up working for me and resolved in no issues.&lt;/p&gt;
&lt;p&gt;Either way, cleaning up the ghost printers is a pain in my ass, and is nothing but manual labor. I ended up reimaging the comptuers after fixing the driver on the print server and going from there.&lt;/p&gt;
&lt;p&gt;Since then its seemed to have been fixed.&lt;/p&gt;
&lt;h2 id=&#34;scripts&#34;&gt;Scripts&lt;/h2&gt;
&lt;p&gt;part-one.ps1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Powershell&#34; data-lang=&#34;Powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;New-ItemProperty -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Print\Providers\Client Side Rendering Print Provider&amp;#34;&lt;/span&gt; -Name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RemovePrintersAtLogoff&amp;#34;&lt;/span&gt; -Value &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; -Force
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Restart-Computer -Force
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;part-two.ps1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Powershell&#34; data-lang=&#34;Powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stop-Service spooler -Force
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\Connections&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\Printers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\Providers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\V4 Connections&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Print\Connections&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Print\Printers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Print\Providers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Print\V4 Connections&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKCU:\Printers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKCU:\Software\Microsoft\Windows NT\CurrentVersion\PrinterPorts&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Registry::HKEY_USERS\.DEFAULT\Printers&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe /accepteula
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\CurrentControlSet\Enum\SWD\PRINTENUM&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\CurrentControlSet\Control\DeviceClasses\{0ecef634-6ef0-472a-8085-5ad023ecbccd}&amp;#34;&lt;/span&gt; -Recurse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\ControlSet001\Enum\SWD\PRINTENUM&amp;#34;&lt;/span&gt; -Recurse -ErrorAction SilentlyContinue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\ControlSet001\Control\DeviceClasses\{0ecef634-6ef0-472a-8085-5ad023ecbccd}&amp;#34;&lt;/span&gt; -Recurse -ErrorAction SilentlyContinue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\ControlSet002\Enum\SWD\PRINTENUM&amp;#34;&lt;/span&gt; -Recurse -ErrorAction SilentlyContinue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\ControlSet002\Control\DeviceClasses\{0ecef634-6ef0-472a-8085-5ad023ecbccd}&amp;#34;&lt;/span&gt; -Recurse -ErrorAction SilentlyContinue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.\PsExec.exe powershell Remove-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HKLM:\SYSTEM\CurrentControlSet\Control\Class\{1ed2bbf9-11f0-4084-b21f-ad83a8e6dcdc}&amp;#34;&lt;/span&gt; -Recurse 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Restart-Computer -Force
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>MECM API</title>
        <link>https://unorthodoxdev.net/post/mecm-api/</link>
        <pubDate>Wed, 19 Jul 2023 21:02:50 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/mecm-api/</guid>
        <description>&lt;p&gt;Currently im looking into creating an application to harvest device information using the MECM API. Since I constantly have to research where the MECM Admin service has its hooks, i thought it would be a good idea to add some general information here.&lt;/p&gt;
&lt;h2 id=&#34;the-basics&#34;&gt;The Basics&lt;/h2&gt;
&lt;p&gt;The AdminService is a REST API that runs as a service, independent of the other web components in IIS on your site servers.&lt;/p&gt;
&lt;h3 id=&#34;service&#34;&gt;Service&lt;/h3&gt;
&lt;p&gt;You can check the status of the service in the console under &lt;strong&gt;\Monitoring\Overview\System Status\Component Status - SMS_REST_PROVIDER&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;read-only-query-basics&#34;&gt;Read-Only Query Basics&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;Note: All queries in this section use a HTTP GET method. Also, everything is CASE SenSiTiVe.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Get all Devices &lt;code&gt;https://&amp;lt;ServerName&amp;gt;/AdminService/wmi/SMS_R_System&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Get All Users &lt;code&gt;https://&amp;lt;ServerName&amp;gt;/AdminService/wmi/SMS_R_User&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Get Device By ResourceID (same syntax for users) &lt;code&gt;https://&amp;lt;ServerName&amp;gt;/AdminService/wmi/SMS_R_System(12345678)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Get User By ResourceID &lt;code&gt;https://&amp;lt;ServerName&amp;gt;/AdminService/wmi/SMS_R_User(12345678)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Retrieve related class information. This example gets Operating System information for a specific device. &lt;code&gt;https://&amp;lt;ServerName&amp;gt;/AdminService/wmi/SMS_R_System(12345678)/SMS_G_System_OPERATING_SYSTEM&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Tattoo</title>
        <link>https://unorthodoxdev.net/post/tattoo/</link>
        <pubDate>Wed, 19 Jul 2023 21:01:44 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/tattoo/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://github.com/ofgrenudo/tattoo/actions/workflows/ci.yml/badge.svg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Workflow Status&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Repository: &lt;a class=&#34;link&#34; href=&#34;https://github.com/ofgrenudo/tattoo/tree/master&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ofgrenudo/tattoo/tree/master&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tattoo is the first complete program that I have written in rust. It consists of two parts, a library and the binary. One of the challenges I experienced when writing this application was the lack of abbility to include files outside of module&amp;rsquo;s folder that I was writing in. While I understand &lt;em&gt;now&lt;/em&gt; why you should not do so and the kinds of compiler problems you would encounter. I think that forcing me to write a library to manage my goals was very benificial for me.&lt;/p&gt;
&lt;p&gt;This is the first library that I have had to write that actually does something. Something more than one plus one, or something simple you make when you learn C. This library was immediately applicable to my needs. It also helped me keep my programs logically seperate from eachother. The UI was allowed to get input from the UI and handle that. The backend was able to take the information from the UI and transcribe it into the database. This way of seperating the program made a dream like fusion for me when it came to keeping things clean.&lt;/p&gt;
&lt;p&gt;Writing the library also forced me to leverage the rust documentation feature. Really cementing the whole experience together.&lt;/p&gt;
&lt;p&gt;Overall, I really enjoyed the experience making this application and hope to have many more safe adventures with rust :)&lt;/p&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;Tattoo is a program designed to automatically collect device information on run, and insert it into the registry of the device. This information is intended for archival purposes and will remain there for later inspection. Some of the bennifits of storing information in the registry is that it provides a static and proctected way to maintain information like,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The day the computer was deployed.&lt;/li&gt;
&lt;li&gt;The task sequence used when you deployed the computer.&lt;/li&gt;
&lt;li&gt;The asset tag assigned.&lt;/li&gt;
&lt;li&gt;The device name when deployed.&lt;/li&gt;
&lt;li&gt;The serial number of the device.&lt;/li&gt;
&lt;li&gt;The device model.&lt;/li&gt;
&lt;li&gt;The device make.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows &amp;gt;=10, or Windows Server 2016.&lt;/li&gt;
&lt;li&gt;PowerShell 5.1 or later&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running&#34;&gt;Running&lt;/h2&gt;
&lt;p&gt;In order to run tattoo.exe you will need at a minimum, the following file along side the executable.&lt;/p&gt;
&lt;p&gt;tatto.exe.manifest&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; standalone=&amp;#34;yes&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urn:schemas-microsoft-com:asm.v1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;manifestVersion=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;assemblyIdentity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0.0.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;processorArchitecture=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;win32&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependentAssembly&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;assemblyIdentity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;win32&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Microsoft.Windows.Common-Controls&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6.0.0.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;processorArchitecture=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;publicKeyToken=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6595b64144ccf1df&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;language=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependentAssembly&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/assembly&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Otherwise it will throw an error &lt;code&gt;exit code: 0xc0000139, STATUS_ENTRYPOINT_NOT_FOUND&lt;/code&gt; when trying to run the program. This is a bug with the native windows gui API that has not been resolved.&lt;/p&gt;
&lt;h2 id=&#34;example-screenshots&#34;&gt;Example Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ofgrenudo/tattoo/master/docs/tattoo-ui.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;tattoo-ui&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Ci Pipelines With Rust</title>
        <link>https://unorthodoxdev.net/post/ci-pipelines-with-rust/</link>
        <pubDate>Wed, 19 Jul 2023 21:01:12 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/ci-pipelines-with-rust/</guid>
        <description>&lt;p&gt;&lt;em&gt;Give a man a fish, and you feed him for a day. Teach a man to fish, and you feed him for a lifetime.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;CI, Continuous onus Integration allows for each member of a team to integrate their changes into the main branch, multiple times a day.&lt;/p&gt;
&lt;p&gt;Continuous Integration allows us to tighten the feed back loop. We are less likely to go off on your own and develop for days or weeks just to find out the approach you have taken isn&amp;rsquo;t working, or isn&amp;rsquo;t approved by peers. Continuous Integration forces you to work with your teammates earlier than when you feel is comfortable allowing for course correcting actions to be taken &lt;em&gt;before&lt;/em&gt; you have wasted your time. So how do we make Continuous Integration a reality?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Tests&lt;/li&gt;
&lt;li&gt;Code Coverage&lt;/li&gt;
&lt;li&gt;Linting&lt;/li&gt;
&lt;li&gt;Formatting&lt;/li&gt;
&lt;li&gt;Security Vulnerabilities&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;tests&#34;&gt;Tests&lt;/h2&gt;
&lt;p&gt;Tests in rust are a first-class concept. This being said rust allows you to easily leverage the rust ecosystem to run unit and integration tests using&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;cargo test&lt;/code&gt; also takes care of building the project before running tests saving you a command or two.&lt;/p&gt;
&lt;h2 id=&#34;code-coverage&#34;&gt;Code Coverage&lt;/h2&gt;
&lt;p&gt;Code coverage is a easy way to see if we have overlooked any section of the code base that have been poorly tested. The easiest way to measure code coverage of a rust project is via &lt;code&gt;cargo tarpaulin&lt;/code&gt; a cargo subcommand developed by xd009642. You can install tarpaulin with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo install cargo-tarpaulin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can run cargo-tarpaulin with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo tarpaulin --ignore-tests
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linting&#34;&gt;Linting&lt;/h2&gt;
&lt;p&gt;Rust maintains &lt;code&gt;clippy&lt;/code&gt; the official rust linter. Clippy is included in the set of components installed by rustup if you are using the default profile. You can run clippy with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo clippy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this CI pipeline we would like to fail the linter check if clippy emits any warnings. To do so we can run the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo clippy -- -D warnings
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note, from time to time clippy might suggest something you do not belive to be correct or desirable. You can mute these warnings with the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[allow(clippy::lint_name)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;formatting&#34;&gt;Formatting&lt;/h2&gt;
&lt;p&gt;Let machines deal with formatting while reviewers focus on architecture, testing thoroughness, reliability, and observability. Automated formatting removes a distraction from the complex equation of the PR review process. You might dislike this or that formatting choice but the complete erasure of formatting bikeshedding is worth the minor discomfort.&lt;/p&gt;
&lt;p&gt;Rust actually has a built in formatter called &lt;code&gt;rustfmt&lt;/code&gt;. &lt;code&gt;rustfmt&lt;/code&gt; should be included in the default rustup components but if you are missing it you can install it via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rustup component add rustfmt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To format your whole project you can run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo fmt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the CI pipeline we will ad a formatting step.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo fmt -- --check
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will ultimately fail when a commit contains unformatted code, printing the difference to the console. You can tune a project with a configuration file &lt;code&gt;rustfmt.toml&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;security-vulnerabilities&#34;&gt;Security Vulnerabilities&lt;/h2&gt;
&lt;p&gt;Caro makes it very easy to leverage existing crates in the ecosystem to solve at hand. On the flip side, each of those crates might hide an exploitable vulnerability that could compromise the security posture of your software. The Rust Secure Code group maintains an &lt;em&gt;Advisory Database&lt;/em&gt; on reported vulnerabilities for crates published on crates.io. You can leverage this advisory database with a tool called cargo-audit. You can install it with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo install cargo-audit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To use it you can run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo audit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;github-actions&#34;&gt;Github Actions&lt;/h1&gt;
&lt;p&gt;Below are some github actions you can add to your CI routines. To use them you will want too create the github actions folder and drop each of these files inside.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p .github/workflows
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd .github/workflows
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;audit.yml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Security audit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;schedule&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;cron&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0 0 * * *&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;paths&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;**/Cargo.toml&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;**/Cargo.lock&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;security_audit&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;taiki-e/install-action@cargo-deny&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Scan for vulnerabilities&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cargo deny check advisories&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;general.yml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Rust&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pull_request&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;types&lt;/span&gt;: [ &lt;span style=&#34;color:#ae81ff&#34;&gt;opened, synchronize, reopened ]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;CARGO_TERM_COLOR&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;SQLX_VERSION&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.6.2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;SQLX_FEATURES&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rustls&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;test&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dtolnay/rust-toolchain@stable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Swatinem/rust-cache@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Run tests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cargo test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;fmt&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Rustfmt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dtolnay/rust-toolchain@stable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;components&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;rustfmt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Enforce formatting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cargo fmt --check&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;clippy&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Clippy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;postgres&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres:14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;POSTGRES_USER&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;POSTGRES_PASSWORD&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;POSTGRES_DB&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;postgres&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#ae81ff&#34;&gt;5432&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;5432&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dtolnay/rust-toolchain@stable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;components&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;clippy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Swatinem/rust-cache@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Linting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cargo clippy -- -D warnings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;coverage&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Code coverage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Checkout repository&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dtolnay/rust-toolchain@stable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Generate code coverage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cargo tarpaulin --verbose --workspace&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Ublock Origin and More</title>
        <link>https://unorthodoxdev.net/post/ublock-origin-and-more/</link>
        <pubDate>Wed, 19 Jul 2023 21:00:06 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/ublock-origin-and-more/</guid>
        <description>&lt;p&gt;Everybody knows about &lt;a class=&#34;link&#34; href=&#34;https://ublockorigin.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;uBlock Origin&lt;/a&gt;. The browser extension that blocks ads right? Well most ads. Theres often ads from social medias sites like facebook and twitter that slip through really.&lt;/p&gt;
&lt;p&gt;Although I recently learned that uBlock has the capability to extend those block lists. The easiset way to add capabilities to your uBlock is to find these pre made lists of URLs and it should begin to block those ads for you. These are really the same lists that DNS filters like pi-hole use.&lt;/p&gt;
&lt;p&gt;A good website that has some of these lists are &lt;a class=&#34;link&#34; href=&#34;https://easylist.to&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://easylist.to&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Browse to the website, and find what ever list you want and then select the button &lt;strong&gt;add it to your blocker.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This will open a new tab, and then uBlock will prompt you to subscribe it it. Select &amp;lsquo;Subscribe&amp;rsquo; and then you will be live with that list.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Digital Gardens</title>
        <link>https://unorthodoxdev.net/post/digital-gardens/</link>
        <pubDate>Wed, 19 Jul 2023 20:59:39 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/digital-gardens/</guid>
        <description>&lt;h2 id=&#34;outline&#34;&gt;Outline&lt;/h2&gt;
&lt;h3 id=&#34;what-is-a-digital-garden&#34;&gt;What is a Digital Garden?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A place for ideas to grow.&lt;/li&gt;
&lt;li&gt;A place for critiques.&lt;/li&gt;
&lt;li&gt;An exercise in learning in public.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;learn-in-public&#34;&gt;Learn In Public&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Humility.&lt;/li&gt;
&lt;li&gt;Honesty.&lt;/li&gt;
&lt;li&gt;Generate Resources that you wish you had.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;work-in-public&#34;&gt;Work In Public&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Document Your Self.&lt;/li&gt;
&lt;li&gt;Document Your Steps&lt;/li&gt;
&lt;li&gt;Working In Public Forces you to Work your Metacognitive Mind.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What is a digital garden? &lt;a class=&#34;link&#34; href=&#34;https://notes.joschua.io/50&amp;#43;Slipbox/Digital&amp;#43;garden&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://notes.joschua.io/50+Slipbox/Digital+garden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Work In Public &lt;a class=&#34;link&#34; href=&#34;https://nesslabs.com/work-in-public&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://nesslabs.com/work-in-public&lt;/a&gt;
Learn In Public &lt;a class=&#34;link&#34; href=&#34;https://www.swyx.io/learn-in-public&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.swyx.io/learn-in-public&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pick Up What They Put Down &lt;a class=&#34;link&#34; href=&#34;https://www.swyx.io/puwtpd&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.swyx.io/puwtpd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Learn In Private &lt;a class=&#34;link&#34; href=&#34;https://www.swyx.io/learn-in-private&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.swyx.io/learn-in-private&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How do Rocket Scientists Learn &lt;a class=&#34;link&#34; href=&#34;https://www.govloop.com/community/blog/how-do-rocket-scientists-learn-aka-knowledge-management-lessons-learned-at-goddard-nasa/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.govloop.com/community/blog/how-do-rocket-scientists-learn-aka-knowledge-management-lessons-learned-at-goddard-nasa/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;what-is-a-digital-garden-1&#34;&gt;What is a Digital Garden?&lt;/h1&gt;
&lt;p&gt;A digital garden to me is a place for for my ideas, projects, and thoughts to be planted in, and sprout and grow in the future. Besides a personal journal on my computer Ive decided to make it a publicly facing blog. Ive decided to so for a few reasons. A digital garden allows space for critiques from others. I don&amp;rsquo;t know everything, nor do I know the best way to do one thing. Posting things publicly allows for a criticism from netizens.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;As I grow, my notes will grow. They will mature from that seed to a full grown plant later in the future.&amp;rdquo; &lt;a class=&#34;link&#34; href=&#34;https://notes.joschua.io/50&amp;#43;Slipbox/Digital&amp;#43;garden&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;(Digital Garden, Joschua)&lt;/a&gt; This is a practice of Working in Public.&lt;/p&gt;
&lt;h2 id=&#34;working-in-public&#34;&gt;Working In Public&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://s18798.pcdn.co/motivationlab/wp-content/uploads/sites/6235/2023/02/two-routes-to-the-sr-oof-mot-and-goals.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Studies show that statistically, people are more likely to do stuff if they keep their intentions in private.&lt;/a&gt; But at times though that statement can seem counter intuitive. Often, people share their weight loss publicly on Facebook or Twitter or Instagram. Many report that doing so is a great way to stay motivated.&lt;/p&gt;
&lt;p&gt;When you think about it, some of the reason, people post things online is because it provides a way for you to receive praise along the way. A quote that sticks with me is&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Become a documentarian of what you do&amp;rdquo; - Austin Kleon, Author of Show Your Work&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Becoming a documentarian means that you will develop very quickly&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your Metacognition&lt;/li&gt;
&lt;li&gt;Quick Feedback Loops on Content&lt;/li&gt;
&lt;li&gt;Increased Creativity.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By documenting your self, you are working your Metacognition. You are working on thinking of your thoughts. Should I have done that? Should I have done this instead. Why did I take that route? Was it because of an experience I had? Working your metacognition and &lt;em&gt;thinking&lt;/em&gt; about your thinking allows for you to quickly determine fallacies in your thought pattern. It also helps you explain in better depth, what you are working on.&lt;/p&gt;
&lt;p&gt;Working in public also forces you to document not only your thoughts, but also your steps taken to get there. Doing this its self can help you identify un necessary steps and find better work flows.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Setting a Hostname on Linux</title>
        <link>https://unorthodoxdev.net/post/setting-a-hostname-on-linux/</link>
        <pubDate>Wed, 19 Jul 2023 20:58:46 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/setting-a-hostname-on-linux/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;â ï¸ Danger
You will need administrative access to the device in question. Changing a hostname can have unintended catastrophic consequences if done without proper consideration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A hostname is a computers human readable address that allows you to communicate with it, regardless of weather or not you know what its IP address is. Hostnames are pratcial and easy to remember. For whatever reason if you need to reset your hostname on a linux machine, you can follow the below instructions&lt;/p&gt;
&lt;p&gt;To view your current hostname type&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hostname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When I do so on the current machine, I see that for whatever reason the machines name is set to localhost. This is a problem as localhost also happens to be an alias to &lt;a class=&#34;link&#34; href=&#34;http://localhost/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;127.0.0.1&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;temporarily&#34;&gt;Temporarily&lt;/h1&gt;
&lt;p&gt;To temporarily reset the hostname of the machine I should do the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hostname changeme
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Again though, unfortunately this only keeps the hostname that way until the next reboot. This might be good for testing or even just to get a prod server off of a bearing load and replace it with a backup server. But for a more permanent and serious effect, we should do the following.&lt;/p&gt;
&lt;h1 id=&#34;permanently&#34;&gt;Permanently&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hostnamectl set-hostname imstuck
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above command should set the hostname immediately as well as it should stick beyond a reboot. To confirm that the name has been configured permanently we can check the following file &lt;code&gt;/etc/hostname&lt;/code&gt; and confirm the contents are what we are expecting. The thing I would do in this case is to reboot as soon as possible so that permanent hostname can really take affect and your DNS servers can update accordingly.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Linux Administration Tips and Tricks</title>
        <link>https://unorthodoxdev.net/post/linux-administration-tips-and-tricks/</link>
        <pubDate>Wed, 19 Jul 2023 20:58:00 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/linux-administration-tips-and-tricks/</guid>
        <description>&lt;p&gt;These notes should work on given any GNU / Linux based operating system. Although, should you run into any road blocks future me. Im sorry for lying to you :(.&lt;/p&gt;
&lt;h1 id=&#34;service-monitoring&#34;&gt;Service Monitoring&lt;/h1&gt;
&lt;p&gt;Services are a integral part of every operating system. How can I monitor and troubleshoot system services when things go wrong?&lt;/p&gt;
&lt;h2 id=&#34;system-services&#34;&gt;System Services&lt;/h2&gt;
&lt;p&gt;This command in a very cute way, will display all of the services installed on your server, and then display them accordingly with + or - signs to indicate weather or not it is running.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service --status-all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using grep, you can highlight services that are running (+) or stopped (-) for easy identification.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service --status-all | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ + ]&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Grep can also help you identify a specific service given you know the name like &lt;code&gt;ssh&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;running-processs&#34;&gt;Running Process&amp;rsquo;s&lt;/h2&gt;
&lt;p&gt;PS displays information about a selection of the active processes. It is an alternative to TOP that only prints once. By default &lt;code&gt;ps&lt;/code&gt; selects all processes with the same user id (EUID). It will show you the Process ID (PID) and the terminal associated with the process (TTY), the cumulated cpu time in [DD-]hh:mm:ss and the executable name (CMD).&lt;/p&gt;
&lt;p&gt;The below command will display all processes initiated by the user.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to see a specific users processes you can do the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps -U root -u root u
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to view every process on the system, you can do&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps -e
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;network-related-services&#34;&gt;Network Related Services&lt;/h2&gt;
&lt;p&gt;The below command will allow you to view all current connections and listening services on a system along with the processes and PIDs for each connection. It requires that you have the &lt;code&gt;net-tools&lt;/code&gt; package installed.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -tulpn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Say I wanted to look at what process was running on port 22&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -tulpn | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;22&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above command will return an output of any port that has 22 in it. For me currently, I have two services listening on port 22. One for IPv4 and IPv6&lt;/p&gt;
&lt;p&gt;Example Output&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ netsatat -tulpn | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;22&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcp    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 0.0.0.0:22    0.0.0.0:*    LISTEN    -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcp6   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; :::22         :::*         LISTEN    -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style=&#34;page-break-after: always;&#34;&gt;&lt;/div&gt;
&lt;h1 id=&#34;networking-shenanigans&#34;&gt;Networking Shenanigans&lt;/h1&gt;
&lt;p&gt;Soy baboon, hay problemas de redes; ooh ooh ahh ahh.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://thumbs.dreamstime.com/z/monkey-scratching-his-head-animal-began-to-think-139656229.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;i-am-a-monkey.jpg | 500&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;first-things-first&#34;&gt;First &lt;em&gt;things&lt;/em&gt; first&lt;/h2&gt;
&lt;p&gt;Where am i on the subnet? The below tools will help you troubleshoot where your are on the subnet, what might be missing, and or misconfigured. To get a quick overview of all of your connected network cards, you can run the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;networkctl status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will print out the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;State: Routable or Not&lt;/li&gt;
&lt;li&gt;Online Status&lt;/li&gt;
&lt;li&gt;Address (IPv4 and IPv6)&lt;/li&gt;
&lt;li&gt;Gateway Address including the associated port.&lt;/li&gt;
&lt;li&gt;DNS Servers&lt;/li&gt;
&lt;li&gt;Domains&lt;/li&gt;
&lt;li&gt;NTP Servers.&lt;/li&gt;
&lt;li&gt;Network Card Configurations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If everything above looks good we can move on to looking more closely at our network cards.&lt;/p&gt;
&lt;h2 id=&#34;whats-my-ip&#34;&gt;Whats my ip?&lt;/h2&gt;
&lt;p&gt;The ip command allows you to show address information, manipulate routing, and display network devices, interfaces, and tunnels. It is a simple concept and hard tool to learn. There really five (5) modes to ip.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tunnel (Tunnel over IP)&lt;/li&gt;
&lt;li&gt;Route (Routing table entry)&lt;/li&gt;
&lt;li&gt;Rule (rule in routing policy database)&lt;/li&gt;
&lt;li&gt;VRF (Manage virtual routing and forwarding devices)&lt;/li&gt;
&lt;li&gt;XFRM (Manage IPSec policies)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To find the IP addresses assigned to your server, use&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip address show
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will give you each interface, numbered from 1 to â¾ï¸ including the status (UP or DOWN), IPv4 and IPv6 address, and subnet mask and broadcast address.&lt;/p&gt;
&lt;p&gt;![[ip-address-show.png]]&lt;/p&gt;
&lt;p&gt;To force a static IP address on a interface, you can do the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip address add 10.66.10.9/16 dev eth0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then you will want to reboot the network card.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip link set eth0 down
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip link set eth0 up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Make sure for the above command you are physically connected to the server otherwise, you may lose connection if your actively using eth0.&lt;/p&gt;
&lt;p&gt;If things are still looking good, we can move on too routes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip route
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will show all of routes advertised by our DHCP server as available as well as their weighted value identified by the metric lable. You should have a few things listed here. If not I would investigate that.&lt;/p&gt;
&lt;h2 id=&#34;my-connection-is-getting-dropped-or-reset-somewhere-along-the-wire&#34;&gt;My connection is getting dropped, or reset somewhere along the wire.&lt;/h2&gt;
&lt;p&gt;MTR (Matts Trace-route) is a program that allows you to diagnose issues like these. To use MTR, you will want to do the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mtr google.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;My favorite flag to use with this is &lt;code&gt;-b&lt;/code&gt; it shows the dns name as well as the IP side by side allowing for a quick analysis of the network having issues.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mtr -b google.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also send a predetermined amount of pings with the &lt;code&gt;-c&lt;/code&gt; flag. Otherwise known as &lt;code&gt;count&lt;/code&gt; it allows you to select how many packets to send.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mtr -c &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; -b google.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The final command you will need to know about with mtr is &lt;code&gt;-r&lt;/code&gt; or record. This allows you to output the information into a txt file for later usage.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mtr -r -c &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; google.com &amp;gt; mtr-google.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that doing so will lock your terminal working on dumping that data so I would recommend a smaller count. If you really wanted to get something running and then do something else in the mean time, you could apply a ampersand (&amp;amp;) to the end of your command to have it run in the background. It will spit out a PID that you can search for later to see if its complete with&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ps -e | grep 15225
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;monitoring-network-traffic&#34;&gt;Monitoring network traffic&lt;/h2&gt;
&lt;p&gt;So, everything looks good, but data is still coming back corrupted? Lets look at the raw packets.&lt;/p&gt;
&lt;p&gt;The below command allows us to capture all traffic that comes or goes from this interface within the following ip and subnet range.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth0 net 10.66.0.0/16
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also filter based on source (&lt;code&gt;src&lt;/code&gt;) or destination (&lt;code&gt;dst&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth src net 10.1.0.0/24
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth dst net 10.1.0.0/24
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally we can also capture traffic only coming or going from a specific port.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth0 port &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Combining the port traffic with a specific host&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth0 host 10.66.10.123 and port &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Custom Start Menu Layouts</title>
        <link>https://unorthodoxdev.net/post/custom-start-menu-layouts/</link>
        <pubDate>Wed, 19 Jul 2023 12:31:03 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/custom-start-menu-layouts/</guid>
        <description>&lt;p&gt;Windows 11 and Start Menus &lt;em&gt;suck.&lt;/em&gt; Nothing works the way Microsoft says it should unless you use Intune. So to get around it, we just copy the bin. For now I&amp;rsquo;m doing both, considering sometime in the future Microsoft might get its stuff together and allow the JSON file to work.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unorthodoxdev.net/post/custom-start-menu-layouts/start-menu-layouts.png&#34;
	width=&#34;667&#34;
	height=&#34;803&#34;
	srcset=&#34;https://unorthodoxdev.net/post/custom-start-menu-layouts/start-menu-layouts_hu670cf9dab5e2357c73ece24347d6e12a_362363_480x0_resize_box_3.png 480w, https://unorthodoxdev.net/post/custom-start-menu-layouts/start-menu-layouts_hu670cf9dab5e2357c73ece24347d6e12a_362363_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Start Menu Layouts&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;83&#34;
		data-flex-basis=&#34;199px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;creating-a-new-layout&#34;&gt;Creating a new Layout&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;On a build PC configure your new layout.&lt;/li&gt;
&lt;li&gt;run the &lt;code&gt;Export-StartLayout&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;Modify the &lt;code&gt;StartLayout&lt;/code&gt; file and change the &lt;code&gt;pinnedList&lt;/code&gt; to &lt;code&gt;primaryOEMPins&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Copy the JSON file to &lt;code&gt;C:\Users\Default\AppData\Local\Microsof\Windows\Shell&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Alternatively, windows holds an encrypted version of the startup file in the &lt;code&gt;%LocalAppData%\Packages\Microsoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy\LocalState&lt;/code&gt; folder. Copying the &lt;code&gt;start.bin&lt;/code&gt; file to whatever computers same folder, will essentially do the same thing.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve also created a mini program that you can use to quickly do the above commands to quickly reproduce the steps above. I will put the latest version of the source blow, alternatively you can check my Github repository out here &lt;a class=&#34;link&#34; href=&#34;https://github.com/ofgrenudo/confs/tree/main/scripts/start-layouts&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ofgrenudo/confs/tree/main/scripts/start-layouts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install.bat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmd /c copy LayoutModification.json C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;efault&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;ppdata&lt;span style=&#34;color:#ae81ff&#34;&gt;\l&lt;/span&gt;ocal&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft&lt;span style=&#34;color:#ae81ff&#34;&gt;\W&lt;/span&gt;indows&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;hell&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ayoutModification.json /y 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmd /c copy start.bin C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;efault&lt;span style=&#34;color:#ae81ff&#34;&gt;\A&lt;/span&gt;ppData&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocal&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;ackages&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocalState
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;do-it-again.bat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@echo off
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;powershell.exe Invoke-Command -scriptbloc &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Export-StartLayout -Path LayoutModifications.json&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmd /c copy %LocalAppdata%&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;ackages&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocalState&lt;span style=&#34;color:#ae81ff&#34;&gt;\s&lt;/span&gt;tart.bin start.bin /y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmd /c copy %LocalAppdata%&lt;span style=&#34;color:#ae81ff&#34;&gt;\P&lt;/span&gt;ackages&lt;span style=&#34;color:#ae81ff&#34;&gt;\M&lt;/span&gt;icrosoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocalState&lt;span style=&#34;color:#ae81ff&#34;&gt;\s&lt;/span&gt;tart2.bin start.bin /y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Echo Remember to Update pinnedList to primaryOEMPins
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pause
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Migrating Ghost Blog Domain Names</title>
        <link>https://unorthodoxdev.net/post/migrating-ghost-blog-domain-names/</link>
        <pubDate>Wed, 19 Jul 2023 12:20:21 -0400</pubDate>
        
        <guid>https://unorthodoxdev.net/post/migrating-ghost-blog-domain-names/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;Note! I have migrated away from ghost blog and now manage my site on hugo!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For some reason when I was looking up how to change [[domain names]] for my ghost blog, I kept running into recommendations that stated I should just reinstall ghost. I really don&amp;rsquo;t want to do that especially since so much content exists on this server already. It also reminded me that I probably need to take regular backups of the server anyways. Or at least, double book blog posts somewhere just in case! (Truthfully most posts end up in my notebook to begin with, and end up polished on the website). Below are my steps to migrate my blogs DNS record.&lt;/p&gt;
&lt;p&gt;Set your new DNS record, a day in advanced to the IP address of your server. In my case I was migrating from &lt;a class=&#34;link&#34; href=&#34;https://blog.unorthodoxdev.net&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.unorthodoxdev.net&lt;/a&gt; to &lt;a class=&#34;link&#34; href=&#34;https://unorthodoxdev.net&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://unorthodoxdev.net&lt;/a&gt;. I created a ANAME record and allowed it to propagate overnight. In the morning, I did the below steps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ghost config url {new_url}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm /etc/nginx/sites-enabled/*.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ghost setup ssl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ghost restart&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally you want to visit your website and check your cert and go from there!&lt;/p&gt;
&lt;p&gt;I would also like to throw in that you might want to remove your ANAME record for whatever your website was before and upgrade it to a CNAME record. CNAME records are really just a redirect to whatever ANAME record you provide it.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
